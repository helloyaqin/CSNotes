{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\\\s\\\\u200b\\\\-]"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"DEBUG/eureka%20Q%26A/","tags":["Notebooks/Study"],"text":"eureka Q&A \u73af\u5883\u914d\u7f6e Q1\uff1a\u77e5\u540djar\u5305\u65e0\u6cd5find\uff1f A\uff1a\u4f7f\u7528\u5230\u7684\u65b9\u6cd5\uff1a - \u7236\u7ea7\u7684pom.xml\uff0c\u70b9\u5f00parent\u7684artifactId\uff0c\u770bpom\u662f\u5426\u4e0b\u8f7d\u6210\u529f\uff08\u6211\u7684\u95ee\u9898\u662f\u8fd9\u91cc\u6ca1\u4e0b\u8f7d\u6210\uff09\uff0c\u6545\u95ee\u9898\u5b9a\u4f4d\u4e3a\u5305\u7684\u4e0b\u8f7d\u95ee\u9898 - \u8fdb\u4e00\u6b65\u7684\uff0c\u6211\u7684\u955c\u50cf\u914d\u7f6e\u7684\u662f\u6dd8\u5b9d\uff0c.pom\u4e2d\u5199\u7684\u201c\u65e0\u6cd5\u8bbf\u95ee\u201d\uff0c\u6545\u9700\u8981\u4fee\u6539settings.xml\u4e2d\u7684mirrors - \u4fee\u6539\u540e\u7684\u955c\u50cf\u4ee3\u7801\u9644\u540e - \u4fee\u6539\u540e\u8fd8\u662f\u4e0d\u884c\uff0c\u6392\u67e5\u4e86\uff1a - maven\u7684\u73af\u5883\u53d8\u91cf - IDEA\u4e2dmaven\u7684settings\u548c.m2/repo\u6587\u4ef6\u7684\u8def\u5f84 - \u4fee\u6539\u5b8c\u8def\u5f84\u540e\uff0c\u91cd\u65b0reload\u8dd1\u901a - \u5b9e\u5728\u4e0d\u884c\uff0c\u6e05\u7406IDEA\u7f13\u5b58\u6216\u8005\u91cd\u542f\u7535\u8111\u518d\u770b\u770b \u8f6c\u5230\u4e86contract-dev\u5206\u652f \u7236\u7ea7pom.xml\u6a21\u5757\u90e8\u5206\u4fee\u6539\u4e3a\uff1a <modules> <module>product_service</module> <module>order_service</module> <module>gatewaydemo</module> <module>railwayticket</module> <module>sql_service</module> <module>weather-forecast</module> <module>json-parse</module> <module>pure_eureka</module> </modules> -- \u73af\u5883\u914d\u7f6e\u5b8c\u6210\u540e \u57fa\u672c\u6d41\u7a0b pure-eureka\uff1ahttp://localhost:8761/ \u67e5\u770b\u4fe1\u606f\uff1ahttp://localhost:8761/eureka/apps \u670d\u52a1\u6ce8\u518c\uff0cweather\uff1ahttp://localhost:8025/v1/weather/forecast?location=%27Beijing%27&time=%27tomorrow%27 \u7f51\u5173\u6ce8\u518c\uff0cgatewaydemo\uff1a - http://localhost:9999/weather-forecast/v1/weather/forecast?location=%27Beijing%27&time=%27tomorrow%27 - http://localhost:9999/api/v1/weather/forecast?location=%27Beijing%27&time=%27tomorrow%27 \u5e38\u89c1\u95ee\u9898 Q\uff1a\u5f00\u542f\u7f51\u5173\u7684\u65f6\u5019\uff1aregistration failed Cannot execute request on any known server A\uff1aapplication.properties/yml\u7684defaultZone\u6ca1\u6709\u548ceureka\u5730\u5740\u5339\u914d eureka: client: service-url: defaultZone: http://localhost:8761/eureka Q\uff1aUnable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost:6379 A\uff1a\u5b89\u88c5Redis http://c.biancheng.net/redis/windows-installer.html windows\uff1ahttps://github.com/tporadowski/redis/releases settings.xml[mirrors] <mirrors> <mirror> <id>aliyun-public</id> <mirrorOf>*</mirrorOf> <name>aliyun public</name> <url>https://maven.aliyun.com/repository/public</url> </mirror> <mirror> <id>aliyun-central</id> <mirrorOf>*</mirrorOf> <name>aliyun central</name> <url>https://maven.aliyun.com/repository/central</url> </mirror> <mirror> <id>aliyun-spring</id> <mirrorOf>*</mirrorOf> <name>aliyun spring</name> <url>https://maven.aliyun.com/repository/spring</url> </mirror> <mirror> <id>aliyun-spring-plugin</id> <mirrorOf>*</mirrorOf> <name>aliyun spring-plugin</name> <url>https://maven.aliyun.com/repository/spring-plugin</url> </mirror> <mirror> <id>aliyun-apache-snapshots</id> <mirrorOf>*</mirrorOf> <name>aliyun apache-snapshots</name> <url>https://maven.aliyun.com/repository/apache-snapshots</url> </mirror> <mirror> <id>aliyun-google</id> <mirrorOf>*</mirrorOf> <name>aliyun google</name> <url>https://maven.aliyun.com/repository/google</url> </mirror> <mirror> <id>aliyun-gradle-plugin</id> <mirrorOf>*</mirrorOf> <name>aliyun gradle-plugin</name> <url>https://maven.aliyun.com/repository/gradle-plugin</url> </mirror> <mirror> <id>aliyun-jcenter</id> <mirrorOf>*</mirrorOf> <name>aliyun jcenter</name> <url>https://maven.aliyun.com/repository/jcenter</url> </mirror> <mirror> <id>aliyun-releases</id> <mirrorOf>*</mirrorOf> <name>aliyun releases</name> <url>https://maven.aliyun.com/repository/releases</url> </mirror> <mirror> <id>aliyun-snapshots</id> <mirrorOf>*</mirrorOf> <name>aliyun snapshots</name> <url>https://maven.aliyun.com/repository/snapshots</url> </mirror> <mirror> <id>aliyun-grails-core</id> <mirrorOf>*</mirrorOf> <name>aliyun grails-core</name> <url>https://maven.aliyun.com/repository/grails-core</url> </mirror> <mirror> <id>aliyun-mapr-public</id> <mirrorOf>*</mirrorOf> <name>aliyun mapr-public</name> <url>https://maven.aliyun.com/repository/mapr-public</url> </mirror> </mirrors> \u4e00\u4e9b\u63d0\u95ee\uff1a 1 \u6709\u54ea\u4e9b\u5305\u7ba1\u7406\u5de5\u5177 2 \u5404\u79cd\u534f\u8bae\u7684\u9ed8\u8ba4\u6253\u5f00\u7aef\u53e3 3","title":"eureka Q&A"},{"location":"DEBUG/eureka%20Q%26A/#eureka-qa","text":"","title":"eureka Q&amp;A"},{"location":"DEBUG/eureka%20Q%26A/#_1","text":"Q1\uff1a\u77e5\u540djar\u5305\u65e0\u6cd5find\uff1f A\uff1a\u4f7f\u7528\u5230\u7684\u65b9\u6cd5\uff1a - \u7236\u7ea7\u7684pom.xml\uff0c\u70b9\u5f00parent\u7684artifactId\uff0c\u770bpom\u662f\u5426\u4e0b\u8f7d\u6210\u529f\uff08\u6211\u7684\u95ee\u9898\u662f\u8fd9\u91cc\u6ca1\u4e0b\u8f7d\u6210\uff09\uff0c\u6545\u95ee\u9898\u5b9a\u4f4d\u4e3a\u5305\u7684\u4e0b\u8f7d\u95ee\u9898 - \u8fdb\u4e00\u6b65\u7684\uff0c\u6211\u7684\u955c\u50cf\u914d\u7f6e\u7684\u662f\u6dd8\u5b9d\uff0c.pom\u4e2d\u5199\u7684\u201c\u65e0\u6cd5\u8bbf\u95ee\u201d\uff0c\u6545\u9700\u8981\u4fee\u6539settings.xml\u4e2d\u7684mirrors - \u4fee\u6539\u540e\u7684\u955c\u50cf\u4ee3\u7801\u9644\u540e - \u4fee\u6539\u540e\u8fd8\u662f\u4e0d\u884c\uff0c\u6392\u67e5\u4e86\uff1a - maven\u7684\u73af\u5883\u53d8\u91cf - IDEA\u4e2dmaven\u7684settings\u548c.m2/repo\u6587\u4ef6\u7684\u8def\u5f84 - \u4fee\u6539\u5b8c\u8def\u5f84\u540e\uff0c\u91cd\u65b0reload\u8dd1\u901a - \u5b9e\u5728\u4e0d\u884c\uff0c\u6e05\u7406IDEA\u7f13\u5b58\u6216\u8005\u91cd\u542f\u7535\u8111\u518d\u770b\u770b \u8f6c\u5230\u4e86contract-dev\u5206\u652f \u7236\u7ea7pom.xml\u6a21\u5757\u90e8\u5206\u4fee\u6539\u4e3a\uff1a <modules> <module>product_service</module> <module>order_service</module> <module>gatewaydemo</module> <module>railwayticket</module> <module>sql_service</module> <module>weather-forecast</module> <module>json-parse</module> <module>pure_eureka</module> </modules> --","title":"\u73af\u5883\u914d\u7f6e"},{"location":"DEBUG/eureka%20Q%26A/#_2","text":"","title":"\u73af\u5883\u914d\u7f6e\u5b8c\u6210\u540e"},{"location":"DEBUG/eureka%20Q%26A/#_3","text":"pure-eureka\uff1ahttp://localhost:8761/ \u67e5\u770b\u4fe1\u606f\uff1ahttp://localhost:8761/eureka/apps \u670d\u52a1\u6ce8\u518c\uff0cweather\uff1ahttp://localhost:8025/v1/weather/forecast?location=%27Beijing%27&time=%27tomorrow%27 \u7f51\u5173\u6ce8\u518c\uff0cgatewaydemo\uff1a - http://localhost:9999/weather-forecast/v1/weather/forecast?location=%27Beijing%27&time=%27tomorrow%27 - http://localhost:9999/api/v1/weather/forecast?location=%27Beijing%27&time=%27tomorrow%27","title":"\u57fa\u672c\u6d41\u7a0b"},{"location":"DEBUG/eureka%20Q%26A/#_4","text":"Q\uff1a\u5f00\u542f\u7f51\u5173\u7684\u65f6\u5019\uff1aregistration failed Cannot execute request on any known server A\uff1aapplication.properties/yml\u7684defaultZone\u6ca1\u6709\u548ceureka\u5730\u5740\u5339\u914d eureka: client: service-url: defaultZone: http://localhost:8761/eureka Q\uff1aUnable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost:6379 A\uff1a\u5b89\u88c5Redis http://c.biancheng.net/redis/windows-installer.html windows\uff1ahttps://github.com/tporadowski/redis/releases settings.xml[mirrors] <mirrors> <mirror> <id>aliyun-public</id> <mirrorOf>*</mirrorOf> <name>aliyun public</name> <url>https://maven.aliyun.com/repository/public</url> </mirror> <mirror> <id>aliyun-central</id> <mirrorOf>*</mirrorOf> <name>aliyun central</name> <url>https://maven.aliyun.com/repository/central</url> </mirror> <mirror> <id>aliyun-spring</id> <mirrorOf>*</mirrorOf> <name>aliyun spring</name> <url>https://maven.aliyun.com/repository/spring</url> </mirror> <mirror> <id>aliyun-spring-plugin</id> <mirrorOf>*</mirrorOf> <name>aliyun spring-plugin</name> <url>https://maven.aliyun.com/repository/spring-plugin</url> </mirror> <mirror> <id>aliyun-apache-snapshots</id> <mirrorOf>*</mirrorOf> <name>aliyun apache-snapshots</name> <url>https://maven.aliyun.com/repository/apache-snapshots</url> </mirror> <mirror> <id>aliyun-google</id> <mirrorOf>*</mirrorOf> <name>aliyun google</name> <url>https://maven.aliyun.com/repository/google</url> </mirror> <mirror> <id>aliyun-gradle-plugin</id> <mirrorOf>*</mirrorOf> <name>aliyun gradle-plugin</name> <url>https://maven.aliyun.com/repository/gradle-plugin</url> </mirror> <mirror> <id>aliyun-jcenter</id> <mirrorOf>*</mirrorOf> <name>aliyun jcenter</name> <url>https://maven.aliyun.com/repository/jcenter</url> </mirror> <mirror> <id>aliyun-releases</id> <mirrorOf>*</mirrorOf> <name>aliyun releases</name> <url>https://maven.aliyun.com/repository/releases</url> </mirror> <mirror> <id>aliyun-snapshots</id> <mirrorOf>*</mirrorOf> <name>aliyun snapshots</name> <url>https://maven.aliyun.com/repository/snapshots</url> </mirror> <mirror> <id>aliyun-grails-core</id> <mirrorOf>*</mirrorOf> <name>aliyun grails-core</name> <url>https://maven.aliyun.com/repository/grails-core</url> </mirror> <mirror> <id>aliyun-mapr-public</id> <mirrorOf>*</mirrorOf> <name>aliyun mapr-public</name> <url>https://maven.aliyun.com/repository/mapr-public</url> </mirror> </mirrors> \u4e00\u4e9b\u63d0\u95ee\uff1a 1 \u6709\u54ea\u4e9b\u5305\u7ba1\u7406\u5de5\u5177 2 \u5404\u79cd\u534f\u8bae\u7684\u9ed8\u8ba4\u6253\u5f00\u7aef\u53e3 3","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"DEBUG/git%E5%88%9D%E6%AC%A1%E6%8F%90%E4%BA%A4%E9%94%99%E8%AF%AF%EF%BC%8Cgithub%20token%E6%9D%83%E9%99%90%E4%B8%8D%E8%B6%B3/","tags":["Notebooks/Study"],"text":"git\u521d\u6b21\u63d0\u4ea4\u9519\u8bef\uff0cgithub token\u6743\u9650\u4e0d\u8db3 \u521b\u5efa\u4e86\u9700\u8981\u4f7f\u7528\u5230yml\u7684\u5de5\u7a0b\uff0c\u5728\u521d\u6b21\u4e0a\u4f20\u7684\u65f6\u5019\u62a5\u9519 refusing to allow an OAuth App to create or update workflow \u539f\u56e0\u662faccess token\u6ca1\u6709workflow\u6743\u9650 \u53bbSettings-\u300bDeveloper-\u300bAccess Token\u91cd\u65b0Update\u4e00\u4e0btoken\uff0c\u540c\u65f6\u8bb0\u5f97\u52fe\u4e0aworkflow\u6743\u9650 \u8bb0\u5f55\u597d\u65b0\u751f\u6210\u7684token git\u7684\u64cd\u4f5c\uff1a \u91cd\u65b0\u751f\u6210\u5b8ctoken\u540e\uff0cgit\u8981\u4e48\u662fOpenSSL SSL_read: Connection was reset, errno 10054\u8981\u4e48\u662fAuthentication failed\uff08time out\u5ffd\u7565\u4e0d\u8ba1\uff09\uff0c\u6b64\u65f6\u5e94\u8be5\u91cd\u65b0\u7528\u65b0token\u548c\u8fdc\u7a0b\u4ed3\u5e93\u5efa\u7acb\u4e0b\u8fde\u63a5\uff0c\u627e\u5230\u4e86\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e8c\u8005\u5747\u53ef\uff1a 1. git\u547d\u4ee4\u64cd\u4f5c $ git remote rm origin $ git remote add origin https://<name>:<token>@github.com/<name>/<repo>.git $ git status On branch master nothing to commit, working tree clean $ git push -u origin master \u57fa\u4e8ewindows\u7684\u51ed\u636e\u7ba1\u7406\u5668 \u51ed\u636e\u7ba1\u7406\u5668\uff08credentials manager\uff09-\u300bwindows credentials-\u300b\u666e\u901a\u51ed\u636e\uff0c\u6dfb\u52a0\u65b0\u51ed\u636e Internet\u5730\u5740\u6216\u7f51\u7edc\u5730\u5740\uff1agit:https://github.com \u7528\u6237\u540d\uff1a\\ \u5bc6\u7801\uff1a\\ \u6211\u7528\u7684\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u540c\u6837\u4e5f\u5728\u51ed\u636e\u7ba1\u7406\u5668\u4e2d\u751f\u6210\u4e86\u51ed\u8bc1\uff0c\u6240\u4ee5ok \u8bd5\u9519\uff1a\u4e4b\u524d\u5c1d\u8bd5\u64a4\u56depush\uff0c\u4f46\u8bf4\u662f\u64a4\u56de\uff0c\u5176\u5b9e\u662f\u56de\u6eda\u5230\u524d\u9762\u7684\u67d0\u4e00\u72b6\u6001\uff0c\u672c\u6b21\u7684\u5de5\u7a0b\u662f\u7b2c\u4e00\u6b21push\uff0c\u6240\u4ee5\u65b9\u6cd5\u6ca1\u6210\u529f \u9996\u5148 git reflog \u67e5\u770bheadID\uff0c\u5728reset\u5373\u53ef $ git reset --soft HEAD # HEAD~1\u662f\u524d\u4e00commit $ git reflog 69d375b (HEAD -> master) HEAD@{0}: reset: moving to HEAD 69d375b (HEAD -> master) HEAD@{1}: reset: moving to HEAD 69d375b (HEAD -> master) HEAD@{2}: commit (initial): first-commit \u8fd9\u91cc\u53d1\u73b0\u6ca1\u6cd5\u64a4\u56de\uff0c\u6240\u4ee5\u6b64\u65b9\u6cd5\u88abpass\uff08\u6240\u4ee5\u611f\u89c9\u521d\u6b21\u53ea\u80fd\u65e0\u8111push -u\u6b38\uff0c\uff0c\uff0c\uff09 \u65b0\u95ee\u9898\uff1aupdate token\u4e14\u4f9d\u7167\u4e0a\u8ff0\u4fee\u6539\u540e\uff0ccmd\u547d\u4ee4\u884c\u4ecd\u51fa\u73b0OpenSSL SSL_read: Connection was reset, errno 10054\u9519\u8bef\uff1f \u53c2\u8003\uff1a https://www.jianshu.com/p/be31d1ab30d0 https://segmentfault.com/a/1190000040544939 https://stackoverflow.com/questions/64059610/how-to-resolve-refusing-to-allow-an-oauth-app-to-create-or-update-workflow-on \u63a8\u8350\uff1a https://git-scm.com/book/en/v2 \u3010git\u771f\u7684\u662f\uff0c\uff0c\u6ca1\u95ee\u9898\u7684\u65f6\u5019\u4ee5\u4e3a\u5c31\u8bb0\u90a3\u51e0\u6761\u547d\u4ee4\u5c31\u591f\u4e86\uff0c\u4e00\u6709\u95ee\u9898\u771f\u7684\u6293\u778eqwq\u3011","title":"git\u521d\u6b21\u63d0\u4ea4\u9519\u8bef\uff0cgithub token\u6743\u9650\u4e0d\u8db3"},{"location":"DEBUG/git%E5%88%9D%E6%AC%A1%E6%8F%90%E4%BA%A4%E9%94%99%E8%AF%AF%EF%BC%8Cgithub%20token%E6%9D%83%E9%99%90%E4%B8%8D%E8%B6%B3/#gitgithub-token","text":"\u521b\u5efa\u4e86\u9700\u8981\u4f7f\u7528\u5230yml\u7684\u5de5\u7a0b\uff0c\u5728\u521d\u6b21\u4e0a\u4f20\u7684\u65f6\u5019\u62a5\u9519 refusing to allow an OAuth App to create or update workflow \u539f\u56e0\u662faccess token\u6ca1\u6709workflow\u6743\u9650 \u53bbSettings-\u300bDeveloper-\u300bAccess Token\u91cd\u65b0Update\u4e00\u4e0btoken\uff0c\u540c\u65f6\u8bb0\u5f97\u52fe\u4e0aworkflow\u6743\u9650 \u8bb0\u5f55\u597d\u65b0\u751f\u6210\u7684token git\u7684\u64cd\u4f5c\uff1a \u91cd\u65b0\u751f\u6210\u5b8ctoken\u540e\uff0cgit\u8981\u4e48\u662fOpenSSL SSL_read: Connection was reset, errno 10054\u8981\u4e48\u662fAuthentication failed\uff08time out\u5ffd\u7565\u4e0d\u8ba1\uff09\uff0c\u6b64\u65f6\u5e94\u8be5\u91cd\u65b0\u7528\u65b0token\u548c\u8fdc\u7a0b\u4ed3\u5e93\u5efa\u7acb\u4e0b\u8fde\u63a5\uff0c\u627e\u5230\u4e86\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e8c\u8005\u5747\u53ef\uff1a 1. git\u547d\u4ee4\u64cd\u4f5c $ git remote rm origin $ git remote add origin https://<name>:<token>@github.com/<name>/<repo>.git $ git status On branch master nothing to commit, working tree clean $ git push -u origin master \u57fa\u4e8ewindows\u7684\u51ed\u636e\u7ba1\u7406\u5668 \u51ed\u636e\u7ba1\u7406\u5668\uff08credentials manager\uff09-\u300bwindows credentials-\u300b\u666e\u901a\u51ed\u636e\uff0c\u6dfb\u52a0\u65b0\u51ed\u636e Internet\u5730\u5740\u6216\u7f51\u7edc\u5730\u5740\uff1agit:https://github.com \u7528\u6237\u540d\uff1a\\ \u5bc6\u7801\uff1a\\ \u6211\u7528\u7684\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u540c\u6837\u4e5f\u5728\u51ed\u636e\u7ba1\u7406\u5668\u4e2d\u751f\u6210\u4e86\u51ed\u8bc1\uff0c\u6240\u4ee5ok \u8bd5\u9519\uff1a\u4e4b\u524d\u5c1d\u8bd5\u64a4\u56depush\uff0c\u4f46\u8bf4\u662f\u64a4\u56de\uff0c\u5176\u5b9e\u662f\u56de\u6eda\u5230\u524d\u9762\u7684\u67d0\u4e00\u72b6\u6001\uff0c\u672c\u6b21\u7684\u5de5\u7a0b\u662f\u7b2c\u4e00\u6b21push\uff0c\u6240\u4ee5\u65b9\u6cd5\u6ca1\u6210\u529f \u9996\u5148 git reflog \u67e5\u770bheadID\uff0c\u5728reset\u5373\u53ef $ git reset --soft HEAD # HEAD~1\u662f\u524d\u4e00commit $ git reflog 69d375b (HEAD -> master) HEAD@{0}: reset: moving to HEAD 69d375b (HEAD -> master) HEAD@{1}: reset: moving to HEAD 69d375b (HEAD -> master) HEAD@{2}: commit (initial): first-commit \u8fd9\u91cc\u53d1\u73b0\u6ca1\u6cd5\u64a4\u56de\uff0c\u6240\u4ee5\u6b64\u65b9\u6cd5\u88abpass\uff08\u6240\u4ee5\u611f\u89c9\u521d\u6b21\u53ea\u80fd\u65e0\u8111push -u\u6b38\uff0c\uff0c\uff0c\uff09 \u65b0\u95ee\u9898\uff1aupdate token\u4e14\u4f9d\u7167\u4e0a\u8ff0\u4fee\u6539\u540e\uff0ccmd\u547d\u4ee4\u884c\u4ecd\u51fa\u73b0OpenSSL SSL_read: Connection was reset, errno 10054\u9519\u8bef\uff1f \u53c2\u8003\uff1a https://www.jianshu.com/p/be31d1ab30d0 https://segmentfault.com/a/1190000040544939 https://stackoverflow.com/questions/64059610/how-to-resolve-refusing-to-allow-an-oauth-app-to-create-or-update-workflow-on \u63a8\u8350\uff1a https://git-scm.com/book/en/v2 \u3010git\u771f\u7684\u662f\uff0c\uff0c\u6ca1\u95ee\u9898\u7684\u65f6\u5019\u4ee5\u4e3a\u5c31\u8bb0\u90a3\u51e0\u6761\u547d\u4ee4\u5c31\u591f\u4e86\uff0c\u4e00\u6709\u95ee\u9898\u771f\u7684\u6293\u778eqwq\u3011","title":"git\u521d\u6b21\u63d0\u4ea4\u9519\u8bef\uff0cgithub token\u6743\u9650\u4e0d\u8db3"},{"location":"%E5%AE%89%E5%85%A8/CTF%E7%9B%B8%E5%85%B3/","tags":["Notebooks/Study"],"text":"CTF\u76f8\u5173 \u7ec3\u4e60\u7f51\u7ad9\uff1a - \u63a8\u8350\uff1ahttps://www.cnblogs.com/Bubgit/p/9721272.html - \u9009\u7528\uff1ahttp://www.wechall.net/challs/by/chall_dif/ASC/page-1 \u6559\u7a0b\uff1aF:\\study\\book\\ctf guide \u5de5\u5177\uff1a \u5bc6\u7801\u683c\u5f0f\u603b\u7ed3\uff1ahttps://cloud.tencent.com/developer/news/175943 write-up \u3010\u7b2c\u4e00\u6279\u3011 Traning : Get Sourced 0.47 The solution is hidden in this page http://www.wechall.net/challenge/training/get_sourced/index.php Use View Sourcecode to get it Solution: C\\^u \u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\uff0c\u4e00\u822c\u85cf\u5728\u6ce8\u91ca\u4e2d\uff0c C\\^f \u641c\u7d22 <! \u627e\u5230\u4ee3\u7801\u6bb5 Result: <!-- You are looking for this password: html_sourcecode --> Training : Ascii 0.55 In a computer, you can only work with numbers. In this challenge you have to decode the following message, which is in ASCII. 84, 104, 101, 32, 115, 111, 108, 117, 116, 105, 111, 110, 32, 105, 115, 58, 32, 105, 99, 114, 112, 105, 97, 101, 100, 100, 99, 111, 112 -- http://www.wechall.net/challenge/training/encodings/ascii/index.php Solution: import sys from tkinter import N def decodeAscii(number): return chr(int(number)) if __name__ == \"__main__\": tmp = input(\"\u8f93\u5165\u5b57\u7b26\uff0c\u4ee5\u9017\u53f7\u9694\u5f00: \") numbers = tmp.split(',') for number in numbers: print(decodeAscii(number), end=\"\") Result: # The solution is: icrpiaeddcop 2021 Christmas Grampa 0.67 Santa speaks many languages and is receiving a lot of letters this year. But he gets old! The problem is that he will need glasses. Do you need glasses as well? spaceone told us you can help! -- http://www.wechall.net/challenge/christmas2021/grampa/index.php Solution: \u70b9\u8fdb\u8fde\u63a5\uff0csolution.php\u4e2d\u6709\u4ee3\u7801 return sha1(\"\u3042\u306a\u305f\u306f\u305d\u308c\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u201c . \u201c\u0627\u0644\u062d\u0644 \u062e\u0627\u0631\u062c \u0646\u0637\u0627\u0642\u0643\"); \u5c06 \u3042\u306a\u305f\u306f\u305d\u308c\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u201c . \u201c\u0627\u0644\u062d\u0644 \u062e\u0627\u0631\u062c \u0646\u0637\u0627\u0642\u0643 \u7684\u52a0\u5bc6\u7ed3\u679c\u586b\u5165\uff0c\u5373\u901a\u8fc7 \uff08\u4f46\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6b63\u786e\u505a\u6cd5\uff0c\u56e0\u4e3a\u6ca1\u6709\u627e\u5230\u4ecechallenge\u9875\u9762\u83b7\u53d6solution.php\u7684\u65b9\u6cd5\uff09 Result: b33815d66363f7bf3aaa9223e22aa0bc66a5c05c Training: Stegano I 1.08 This is the most basic image stegano I can think of. -- https://www.wechall.net/challenge/training/stegano1/index.php Solution: \u653e\u5230WSL/Linux\u7cfb\u7edf\u4e2d\uff0c\u7528cat\u6216\u8005vim\u6253\u5f00\u5373\u53ef\u770b\u89c1flag \u56e0\u4e3a\u8bf4\u4e86\u662f\u6700\u7b80\u5355\u7684\uff0c\u6240\u4ee5\u6ca1\u505a\u5176\u4ed6\u7684\u9690\u5199\u5904\u7406 Result: Look what the hex-edit revealed: passwd:steganoI Reference\uff1ahttps://fareedfauzi.gitbook.io/ctf-checklist-for-beginner/steganography Encodings: URL (Training, Encoding) 0.81 Your task is to decode the following: %59%69%70%70%65%68%21%20%59%6F%75%72%20%55%52%4C%20%69%73%20%63%68%61%6C%6C%65%6E%67%65%2F%74%72%61%69%6E%69%6E%67%2F%65%6E%63%6F%64%69%6E%67%73%2F%75%72%6C%2F%73%61%77%5F%6C%6F%74%69%6F%6E%2E%70%68%70%3F%70%3D%65%64%73%6C%67%61%70%66%6D%63%70%62%26%63%69%64%3D%35%32%23%70%61%73%73%77%6F%72%64%3D%66%69%62%72%65%5F%6F%70%74%69%63%73%20%56%65%72%79%20%77%65%6C%6C%20%64%6F%6E%65%21 -- https://www.wechall.net/challenge/training/encodings/url/index.php Solution: URL\u7f16\u7801\u8f6c\u7801\uff0c\u7f51\u4e0a\u968f\u4fbf\u627e\u4e2a\u5c0f\u5de5\u5177\uff0c Result\uff1a \u89e3\u7801\u7ed3\u679c\uff1a Yippeh! Your URL is challenge/training/encodings/url/saw_lotion.php?p=edslgapfmcpb&cid=52#password=fibre_optics Very well done! \u628a\u7ed3\u679c\u7ed9\u7684\u7f51\u5740\u548cwecall\u7684\u7f51\u5740\u62fc\u5408\u4e00\u4e0b\u5e76\u8bbf\u95ee\uff1a https://www.wechall.net/challenge/training/encodings/url/saw_lotion.php?p=edslgapfmcpb&cid=52#password=fibre_optics \uff0c\u8fc7\u4e86 Training: Crypto - Caesar I (Crypto, Training) 1.2 As on most challenge sites, there are some beginner cryptos, and often you get started with the good old caesar cipher. I welcome you to the WeChall style of these training challenges :) Enjoy! SGD PTHBJ AQNVM ENW ITLOR NUDQ SGD KZYX CNF NE BZDRZQ ZMC XNTQ TMHPTD RNKTSHNM HR ONLRMZRDECGC -- https://www.wechall.net/challenge/training/crypto/caesar/index.php Solution: \u51ef\u6492\u5bc6\u7801\uff0c\u66b4\u529b\u4e00\u70b9\u7684\u8bd5\u9519\u5c31\u884c\u4e86\uff0c\u504f\u79fb6\u4f4d\u89e3\u5bc6\u65f6\uff0c\u7ed3\u679c\u4e3a\uff1aMAX JNBVD UKHPG YHQ CNFIL HOXK MAX ETSR WHZ HY VTXLTK TGW RHNK NGBJNX LHENMBHG BL IHFLGTLXYWAW \u4f46\u662f\u53ea\u6709MAX\u5bf9\u7684\u4e0a\uff0c\u5176\u4ed6\u7684\u5355\u8bcd\u8fd8\u662f\u5bf9\u4e0d\u4e0a\uff0c\u51fa\u4e8e\u5de7\u5408\uff0c\u70b9\u4e2d\u4e86\u504f\u79fb7\u4f4d\u52a0\u5bc6\uff0c\u6b64\u65f6\u7ed3\u679c\u4e3a\uff1aTHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG OF CAESAR AND YOUR UNIQUE SOLUTION IS POMSNASEFDHD \u5f97\u5230flag\uff08\u6bcf\u6b21\u968f\u673a\u51fa\u6765\u7684\u5bc6\u6587\u4e0d\u4e00\u6837\uff0c\u4f46\u9012\u5f52\u89e3\u5bc6\u80af\u5b9a\u80fd\u505a\uff09 \u5c1d\u8bd5\u5199\u4e86python\u811a\u672c\uff1a import sys def caeser_decode(p,num): result = \"\" base = \"A\" for n in num: if n == \" \": result += n else: result += chr((ord(n)-p + ord(base))%26 + ord(base)) return result if __name__ == \"__main__\": num = input(\"\u8f93\u5165\u5bc6\u6587\uff1a\") print(\"\u7206\u7834\u4e2d\uff0c\uff0c\") for p in range(1,26): print(caeser_decode(p,num)) \u4f46\u662f\u8be5\u811a\u672c\u53ea\u9488\u5bf9\u4e86\u5927\u5199\u7684\u51ef\u6492\uff0c\u9700\u8981\u52a0\u4ee5\u4fee\u6539\uff0c\u540c\u65f6\u5728 \u627e\u5230\u4e86\u7528\u5b57\u6bcd\u8868\u7684\u65b9\u6cd5\u5b9e\u73b0\u51ef\u6492\u7206\u7834\u7684\uff0c\u503c\u5f97\u5b66\u4e60\uff0c\u53ea\u4e0d\u8fc7\u6ca1\u6709\u8df3\u8fc7\u7a7a\u683c\uff0c\u6709\u70b9\u53ef\u60dc symbols = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890 !?.' ciphertext = input(\"Please input ciphertext:\\n\") for key in range(len(symbols)): ciphers = symbols[key:] + symbols[:key] # \u5b57\u6bcd\u8868 transtab = str.maketrans(ciphers, symbols) plaintext = ciphertext.translate(transtab) print(f'Key #{key}: {plaintext}') Result\uff1a THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG OF CAESAR AND YOUR UNIQUE SOLUTION IS POMSNASEFDHD Training: WWW-Robots (HTTP, Training) 1.22 In this little training challenge, you are going to learn about the Robots_exclusion_standard. The robots.txt file is used by web crawlers to check if they are allowed to crawl and index your website or only parts of it. Sometimes these files reveal the directory structure instead protecting the content from being crawled. Enjoy! Solution: robots.txt: \u662f\u4e00\u79cd\u5b58\u653e\u4e8e\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0b\u7684ASCII\u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\uff0c\u5b83\u901a\u5e38\u544a\u8bc9\u7f51\u7edc\u641c\u7d22\u5f15\u64ce\u7684\u6f2b\u6e38\u5668\uff08\u53c8\u79f0\u7f51\u7edc\u8718\u86db\uff09\uff0c\u6b64\u7f51\u7ad9\u4e2d\u7684\u54ea\u4e9b\u5185\u5bb9\u662f\u4e0d\u5e94\u88ab\u641c\u7d22\u5f15\u64ce\u7684\u6f2b\u6e38\u5668\u83b7\u53d6\u7684\uff0c\u54ea\u4e9b\u662f\u53ef\u4ee5\u88ab\u6f2b\u6e38\u5668\u83b7\u53d6\u7684\u3002\u56e0\u4e3a\u4e00\u4e9b\u7cfb\u7edf\u4e2d\u7684URL\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684\uff0c\u6240\u4ee5robots.txt\u7684\u6587\u4ef6\u540d\u5e94\u7edf\u4e00\u4e3a\u5c0f\u5199\u3002robots.txt\u5e94\u653e\u7f6e\u4e8e\u7f51\u7ad9\u7684\u6839\u76ee\u5f55\u4e0b\u3002\u5982\u679c\u60f3\u5355\u72ec\u5b9a\u4e49\u641c\u7d22\u5f15\u64ce\u7684\u6f2b\u6e38\u5668\u8bbf\u95ee\u5b50\u76ee\u5f55\u65f6\u7684\u884c\u4e3a\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06\u81ea\u5b9a\u7684\u8bbe\u7f6e\u5408\u5e76\u5230\u6839\u76ee\u5f55\u4e0b\u7684robots.txt\uff0c\u6216\u8005\u4f7f\u7528robots\u5143\u6570\u636e\uff08Metadata\uff0c\u53c8\u79f0\u5143\u6570\u636e\uff09\u3002 \u6bd4\u5982\uff0c\u6b63\u597d\u524d\u9635\u65e5\u5b50\u88ab\u8001\u5e08\u95ee\u5230\u6211\u77e5\u7f51\u8bba\u6587\u6570\u636e\u600e\u4e48\u722c\u7684\uff0c\u77e5\u7f51\u5141\u4e0d\u5141\u8bb8\u722c\u866b \u6211\u722c\u53d6\u7684\u7f51\u7ad9https://search.cnki.com.cn/\uff0c\u4ed6\u7684robots.txt\u4e3a\uff1a user-agent:* allow:/ \u5373\u5141\u8bb8\u6240\u6709\u7684\u673a\u5668\u4eba\u722c\u53d6\u4efb\u610f\u4fe1\u606f\uff0c \u800c\u6b63\u5e38\u6211\u4eec\u8bbf\u95ee\u7684\u77e5\u7f51\u9875\u9762https://www.cnki.net/\uff0c\u6ca1\u6709robots.txt\uff0c\u641c\u7d22\u65f6\u4f1a\u8df3\u8f6c\u5230\u7f51\u5740https://kns.cnki.net/\uff0c\u4ed6\u7684robots.txt\u4e3a\uff1a User-agent: * Disallow: / \u5373\u4e0d\u5141\u8bb8\u4efb\u4f55\u673a\u5668\u4eba\u722c\u53d6\u4fe1\u606f\uff0c\u6545\u77e5\u7f51\u53ef\u80fd\u771f\u7684\u4e0d\u5141\u8bb8\u722c\u866b\uff0c\u4f46search\u7684\u90a3\u4e2a\u9875\u9762\u4f9d\u65e7\u5f00\u653e\u3002 \u56de\u5230\u672c\u9898\uff0c\u601d\u8def\u5982\u4e0b\uff1a https://www.wechall.net/robots.txt \u770b\u89c1disallow\u6863\u6848 Result: https://www.wechall.net/challenge/training/www/robots/T0PS3CR3T/ PHP-0817 1.61 I have written another include system for my dynamic webpages, but it seems to be vulnerable to LFI. Here is the code: GeSHi`ed PHP code <?php if (isset($_GET['which'])) { $which = $_GET['which']; switch ($which) { case 0: case 1: case 2: require_once $which.'.php'; break; default: echo GWF_HTML::error('PHP-0817', 'Hacker NoNoNo!', false); break; } } ?> Your mission is to include solution.php. Here is the script in action: News, Forum, Guestbook. Good Luck! -- https://www.wechall.net/challenge/php0817/index.php Solution: LFI: Local File inclusion PHP\u4ee3\u7801\u4e3a\u5224\u65adwhich\u7684case\u8bed\u53e5\uff0c\u5176\u4e2d\uff0cwhich==0/1/2/\u65f6\u4f1a\u6267\u884c$which.'.php'\uff0c\u5176\u4ed6\u503c\u65f6\uff0c\u4f1a\u62a5\u9519\u8bef\u4fe1\u606f \u521d\u6b65\u7406\u89e3\uff0c\u5c06which=solution\uff0c\u662f\u4e0d\u662f\u5c31\u80fd\u901a\u8fc7index.php\u6267\u884csolution.php\u4e86 \u7ed3\u679c\u786e\u5b9e\u662f\u6210\u529f\u4e86\uff0c\u53ef\u4e3a\u4ec0\u4e48which=solution\u65f6\u901a\u8fc7\u4e86which==0/1/2\u7684\u5224\u65ad\u5462\uff1f\uff1f\uff1f - \u5f53\u4e00\u4e2a\u975e\u6570\u5b57\u5f00\u5934\u7684\u5b57\u7b26\u4e32\u4e0e\u6570\u5b570\u8fdb\u884c==\u6bd4\u8f83\u65f6\uff0c\u7ed3\u679c\u603b\u662ftrue\uff01 Result: https://www.wechall.net/challenge/php0817/index.php?which=solution Training: PHP LFI (Exploit, PHP, Training) 2.9 Your mission is to exploit this code, which has obviously an LFI vulnerability: GeSHi`ed PHP code $filename = 'pages/'.(isset($_GET[\"file\"])?$_GET[\"file\"]:\"welcome\").'.html'; include $filename; There is a lot of important stuff in ../solution.php, so please include and execute this file for us. ... -- https://www.wechall.net/challenge/training/php/lfi/up/index.php Solution: \u8d81\u70ed\u6253\u94c1\uff0c\u770b\u89c1file\uff0c\u660e\u767d\u662f\u7528\u8def\u5f84\u8fdb\u884cLFI\u653b\u51fb\uff0c\u4f46\u662f\u4e00\u76f4\u8bbf\u95ee\u4e0d\u8fdb\u53bb \u540e\u6765\u770b\u653b\u7565\u53d1\u73b0\u62a5\u9519\u91cc\u663e\u793a\u7684\u662f PHP Warning(2): include(pages/../../solution.php.html): failed to open stream: No such file or directory in /home/wechall/www/wc5/www/challenge/training/php/lfi/up/index.php(54) : eval()'d code line 1 PHP Warning(2): include(): Failed opening 'pages/../../solution.php.html' for inclusion \u53d1\u73b0\u591a\u4e86\u4e2a.html\uff0c\u7528%00\u622a\u65ad\uff0c\u901a\u8fc7 Result: https://www.wechall.net/challenge/training/php/lfi/up/index.php?file=../../solution.php%00 Prime Factory (Training, Math) 1.98 Your task is simple: Find the first two primes above 1 million, whose separate digit sums are also prime. As example take 23, which is a prime whose digit sum, 5, is also prime. The solution is the concatination of the two numbers, Example: If the first number is 1,234,567 and the second is 8,765,432, your solution is 12345678765432 Solution: import sys def is_prime(num): for i in range(2,num): if num % i == 0 and num != 2: return False return True if __name__ == \"__main__\": print(\"start programming...\") list = [] times = 0 vars = 1000000 while times < 2: if is_prime(vars): tmp = sum(map(int, str(vars))) if is_prime(tmp): list.append(vars) times += 1 vars += 1 if vars > 9999999: break print(list) Result: 10000331000037 Training: MySQL I (MySQL, Exploit, Training) 2.16 This one is the classic mysql injection challenge. Your mission is easy: Login yourself as admin. Again you are given the sourcecode, also as highlighted version. Enjoy! -- https://www.wechall.net/challenge/training/mysql/auth_bypass1/index.php Solution: SQL\u6ce8\u5165\uff0c\u5bf9\u5e94\u6e90\u7801\uff1a function auth1_onLogin(WC_Challenge $chall, $username, $password) { $db = auth1_db(); $password = md5($password); $query = \"SELECT * FROM users WHERE username='$username' AND password='$password'\"; # Attention\uff01\uff01 if (false === ($result = $db->queryFirst($query))) { # Attention\uff01\uff01 echo GWF_HTML::error('Auth1', $chall->lang('err_unknown'), false); # Unknown user return false; } # Welcome back! echo GWF_HTML::message('Auth1', $chall->lang('msg_welcome_back', htmlspecialchars($result['username'])), false); # Challenge solved? if (strtolower($result['username']) === 'admin') { # Attention\uff01\uff01 $chall->onChallengeSolved(GWF_Session::getUserID()); } return true; } \u5373\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\uff1a 1. query\u80fd\u8fd4\u56de\u7ed3\u679c 2. \u7528\u6237\u540d\u4e3aadmin 3. \u7a81\u7834\u53e3\u5728\\$query\u7684$username\u4e0a Result: username: admin' or '1'='1 passowrd: * Training: Encodings I (Training, Encoding) 3.35 We intercepted this message from one challenger to another, maybe you can find out what they were talking about. To help you on your progress I coded a small java application, called JPK. Note: The message is most likely in english. 10101001101000110100111100110100 00011101001100101111100011101000 10000011010011110011010000001101 11010110111000101101001111010001 00000110010111011101100011110111 11100100110010111001000100000110 00011110011110001111010011101001 01011100100000101100111011111110 10111100100100000111000011000011 11001111100111110111110111111100 10110010001000001101001111001101 00000110010111000011110011111100 11110011111010011000011110010111 0100110010111100100101110 -- https://www.wechall.net/challenge/training/encodings1/index.php Solution: \u4e0b\u8f7dJDK\uff0c\u8fd0\u884c \u7531\u4e8e\u662f0/1\uff0c\u5224\u65ad\u4e3a\u662fBinary\u4e8c\u8fdb\u5236\uff0c\u5c06\u5176\u8f6c\u6362\u4e3aascii ASCII \u7801\u4f7f\u7528\u6307\u5b9a\u76847 \u4f4d\u62168 \u4f4d\u4e8c\u8fdb\u5236\u6570\u7ec4\u5408\u6765\u8868\u793a128 \u6216256 \u79cd\u53ef\u80fd\u7684\u5b57\u7b26\u3002 \u9ed8\u8ba4bitsperblock\u662f8\uff0cBinary Format\u4e4b\u540e\u591a\u4e00\u4f4d\uff0c\u6539\u62107 \u518dBinary to Ascii\u5f97\u5230\u7ed3\u679c Result\uff1a This text is 7-bit encoded ascii. Your password is easystarter Training: Programming 1 (Training, Coding) When you visit this link you receive a message. Submit the same message back to https://www.wechall.net/challenge/training/programming1/index.php?answer=the_message Your timelimit is 1.337 seconds -- https://www.wechall.net/challenge/training/programming1/index.php Solution: \u722c\u866b\uff0cfq\u9700\u8981\u628a\u5c0f\u706b\u7bad\u505c\u6389\uff01\u4fdd\u8bc1IP\u5730\u5740\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u62a5\u9519Please login by sending your cookies in the HTTP Header\uff08\u6211\u4e00\u5f00\u59cb\u8fd8\u4ee5\u4e3a\u662f\u6211\u7684\u95ee\u9898\uff0c\u627e\u4e86\u4e24\u5c0f\u65f6\u7684\u9519= = \uff09 import requests url1 = 'http://www.wechall.net/challenge/training/programming1/index.php?action=request' url2 = 'http://www.wechall.net/challenge/training/programming1/index.php?answer=' header = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36'} cookie = dict(WC='16560453-62765-MFd1Gts6fM63vVbV') re = requests.get(url1,headers=header,cookies=cookie) print(re.status_code) key = re.text print(key) url2 = url2 + key re = requests.get(url2,headers=header,cookies=cookie) print(re.text) Result: \u8fd0\u884c\u7a0b\u5e8f\u5373\u53ef Zebra (Training, Encoding, Stegano) 2.25 Help! A zebra escaped from its enclosure. But where is it now? -- https://www.wechall.net/challenge/Hirsch/Zebra/index.php Solution: \u6591\u9a6c\u4e0a\u7684\u6761\u7eb9\u662f\u6761\u5f62\u7801\uff0c\u7528\u8bfb\u53d6\u6761\u5f62\u7801\u7684\u7f51\u7ad9\u8bc6\u522b\u4e00\u4e0b\u5c31\u884c \u6761\u5f62\u7801\u8bc6\u522b\uff1ahttps://online-barcode-reader.inliteresearch.com/ Result: The answer is saFFari Training: Crypto - Transposition I (Crypto, Training) 2.42 It seems that the simple substitution ciphers are too easy for you. From my own experience I can tell that transposition ciphers are more difficult to attack. However, in this training challenge you should have not much problems to reveal the plaintext. oWdnreuf.lY uoc nar ae dht eemssga eaw yebttrew eh nht eelttre sra enic roertco drre . Ihtni koy uowlu dilekt oes eoyrup sawsro don:wp soceiahbcp.h -- https://www.wechall.net/challenge/training/crypto/transposition1/index.php Solution: \u7b2c\u4e00\u4e2a\u5355\u8bcdwonderful\uff0c\u6240\u4ee5\u662f\u4e24\u4e2a\u5b57\u7b26\u53cd\u8f6c\uff0c\u5199\u7a0b\u5e8f\u5c31\u884c import sys def reverse_code(code): return code[::-1] def decode_Fun(en, num): tmp = 0 result = '' while tmp <= len(en): reverse = en[tmp:tmp+num] result += reverse_code(reverse) tmp = tmp + num reverse = en[tmp-num:-1] result += reverse_code(reverse) print(result) return result if __name__ == \"__main__\": # encrypt_code = input() encrypt_code = 'oWdnreuf.lY uoc nar ae dht eemssga eaw yebttrew eh nht eelttre sra enic roertco drre . Ihtni koy uowlu dilekt oes eoyrup sawsro don:wp soceiahbcp.h' decode_Fun(encrypt_code, 2) Result: Wonderful. You can read the message way better when the letters are in correct order. I think you would like to see your password now: posecaibhpch. Training: Regex (Training, Regex) 4.18 submit the regular expression the matches an empty string, and only an empty string. submit a regular expression that matches only the string 'wechall' without quotes. submit an expression that matches valid filenames for certain images.Your pattern shall match all images with the name wechall.ext or wechall4.ext and a valid image extension.Valid image extensions are .jpg, .gif, .tiff, .bmp and .png. capture the filename, without extension, too -- https://www.wechall.net/challenge/training/regex/index.php Solution: \u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u83dc\u9e1f\u770b\u4e00\u4e0b\u5c31\u884c \u8fd9\u91cc\u770b\u4e00\u4e0b\u975e\u6355\u83b7\u6027\u5339\u914d\u662f\u5565\uff1a\u4f8b\u5982\uff0c\u8981\u5728\u4e00\u7bc7\u82f1\u6587\u8d44\u6599\u4e2d\u67e5\u627e\"program\"\u548c\"project\"\u4e24\u4e2a\u5355\u8bcd\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u8868\u793a\u4e3a/program|project/,\u4e5f\u53ef\u8868\u793a\u4e3a/pro(gram|ject)/\uff0c\u4f46\u662f\u7f13\u5b58\u5b50\u5339\u914d(gramject)\u6ca1\u6709\u610f\u4e49\uff0c\u5c31\u53ef\u4ee5\u7528/pro(?:gram|ject)/\u8fdb\u884c\u975e\u6355\u83b7\u6027\u5339\u914d\u8fd9\u6837\u65e2\u53ef\u4ee5\u7b80\u6d01\u5339\u914d\u53c8\u53ef\u4e0d\u7f13\u5b58\u65e0\u5b9e\u9645\u610f\u4e49\u7684\u5b57\u5339\u914d\u3002 Result: /^$/ /^wechall$/ /^wechall4?.(?:tiff|jpg|gif|bmp|png)$/ /^(wechall4?).(?:tiff|jpg|gif|bmp|png)$/ hi (Math) 2.39 Hi, imagine this situation. There is an IRC channel #wechall on irc.wechall.net. The server sends the messages to all people in the channel, also back to the sender himself. When every minute one person joins and says hi, how many \"hi\" messages were totally sent for this channel after 0xfffbadc0ded minutes ? No one ever leaves the channel, so there are 0xfffbadc0ded people at the end ;) Further explanation for 3 minutes: the channel is empty and there have been sent 0 messages 1st person joins, sends hi, the server sends hi back to 1 persons. 2nd person joins, sends hi, the server sends hi back to 2 persons. 3rd person joins, sends hi, the server sends hi back to 3 persons. Minute 1: 2 messages sent Minute 2: 3 messages sent Minute 3: 4 messages sent Adding these up means for 3 minutes are 9 messages sent. Conversion Notes: 0xfffbadc0ded is hexadecimal which converts to 17.591.026.060.781 (Thats around 20 trillion minutes).Please submit your solution in the decimal system. -- https://www.wechall.net/challenge/hi/index.php Solution: \u5927\u6570\u7b49\u5dee\u6570\u5217\uff0c\u61d2\u5f97\u7f16\u7a0b\uff0c\u7528\u514d\u8d39\u5728\u7ebf\u667a\u80fd\u8ba1\u7b97\u5f15\u64ce https://www.wolframalpha.com/ Result: 154722098935564539692256152 Stegano Attachment (Stegano, Image, Training) 2.55 Hello challenger, You got mail and a nice attachment. Your unique solution which is bound to your session is in there too. Enjoy! -- https://www.wechall.net/challenge/training/stegano/attachment/index.php Solution: \u653estegsolve\u91ccFormat\u4e00\u4e0b\uff0cascii\u51fa\u73b0\u4e86solution.txt\u5b57\u6837\uff0c\u540e\u9762\u8ddf\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u4e2a\u4eba\u7684flag Result: \u6bcf\u4e2a\u4eba\u4e0d\u4e00\u6837","title":"CTF\u76f8\u5173"},{"location":"%E5%AE%89%E5%85%A8/CTF%E7%9B%B8%E5%85%B3/#ctf","text":"\u7ec3\u4e60\u7f51\u7ad9\uff1a - \u63a8\u8350\uff1ahttps://www.cnblogs.com/Bubgit/p/9721272.html - \u9009\u7528\uff1ahttp://www.wechall.net/challs/by/chall_dif/ASC/page-1 \u6559\u7a0b\uff1aF:\\study\\book\\ctf guide \u5de5\u5177\uff1a \u5bc6\u7801\u683c\u5f0f\u603b\u7ed3\uff1ahttps://cloud.tencent.com/developer/news/175943","title":"CTF\u76f8\u5173"},{"location":"%E5%AE%89%E5%85%A8/CTF%E7%9B%B8%E5%85%B3/#write-up","text":"Traning : Get Sourced 0.47 The solution is hidden in this page http://www.wechall.net/challenge/training/get_sourced/index.php Use View Sourcecode to get it Solution: C\\^u \u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\uff0c\u4e00\u822c\u85cf\u5728\u6ce8\u91ca\u4e2d\uff0c C\\^f \u641c\u7d22 <! \u627e\u5230\u4ee3\u7801\u6bb5 Result: <!-- You are looking for this password: html_sourcecode --> Training : Ascii 0.55 In a computer, you can only work with numbers. In this challenge you have to decode the following message, which is in ASCII. 84, 104, 101, 32, 115, 111, 108, 117, 116, 105, 111, 110, 32, 105, 115, 58, 32, 105, 99, 114, 112, 105, 97, 101, 100, 100, 99, 111, 112 -- http://www.wechall.net/challenge/training/encodings/ascii/index.php Solution: import sys from tkinter import N def decodeAscii(number): return chr(int(number)) if __name__ == \"__main__\": tmp = input(\"\u8f93\u5165\u5b57\u7b26\uff0c\u4ee5\u9017\u53f7\u9694\u5f00: \") numbers = tmp.split(',') for number in numbers: print(decodeAscii(number), end=\"\") Result: # The solution is: icrpiaeddcop 2021 Christmas Grampa 0.67 Santa speaks many languages and is receiving a lot of letters this year. But he gets old! The problem is that he will need glasses. Do you need glasses as well? spaceone told us you can help! -- http://www.wechall.net/challenge/christmas2021/grampa/index.php Solution: \u70b9\u8fdb\u8fde\u63a5\uff0csolution.php\u4e2d\u6709\u4ee3\u7801 return sha1(\"\u3042\u306a\u305f\u306f\u305d\u308c\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u201c . \u201c\u0627\u0644\u062d\u0644 \u062e\u0627\u0631\u062c \u0646\u0637\u0627\u0642\u0643\"); \u5c06 \u3042\u306a\u305f\u306f\u305d\u308c\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u201c . \u201c\u0627\u0644\u062d\u0644 \u062e\u0627\u0631\u062c \u0646\u0637\u0627\u0642\u0643 \u7684\u52a0\u5bc6\u7ed3\u679c\u586b\u5165\uff0c\u5373\u901a\u8fc7 \uff08\u4f46\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6b63\u786e\u505a\u6cd5\uff0c\u56e0\u4e3a\u6ca1\u6709\u627e\u5230\u4ecechallenge\u9875\u9762\u83b7\u53d6solution.php\u7684\u65b9\u6cd5\uff09 Result: b33815d66363f7bf3aaa9223e22aa0bc66a5c05c Training: Stegano I 1.08 This is the most basic image stegano I can think of. -- https://www.wechall.net/challenge/training/stegano1/index.php Solution: \u653e\u5230WSL/Linux\u7cfb\u7edf\u4e2d\uff0c\u7528cat\u6216\u8005vim\u6253\u5f00\u5373\u53ef\u770b\u89c1flag \u56e0\u4e3a\u8bf4\u4e86\u662f\u6700\u7b80\u5355\u7684\uff0c\u6240\u4ee5\u6ca1\u505a\u5176\u4ed6\u7684\u9690\u5199\u5904\u7406 Result: Look what the hex-edit revealed: passwd:steganoI Reference\uff1ahttps://fareedfauzi.gitbook.io/ctf-checklist-for-beginner/steganography Encodings: URL (Training, Encoding) 0.81 Your task is to decode the following: %59%69%70%70%65%68%21%20%59%6F%75%72%20%55%52%4C%20%69%73%20%63%68%61%6C%6C%65%6E%67%65%2F%74%72%61%69%6E%69%6E%67%2F%65%6E%63%6F%64%69%6E%67%73%2F%75%72%6C%2F%73%61%77%5F%6C%6F%74%69%6F%6E%2E%70%68%70%3F%70%3D%65%64%73%6C%67%61%70%66%6D%63%70%62%26%63%69%64%3D%35%32%23%70%61%73%73%77%6F%72%64%3D%66%69%62%72%65%5F%6F%70%74%69%63%73%20%56%65%72%79%20%77%65%6C%6C%20%64%6F%6E%65%21 -- https://www.wechall.net/challenge/training/encodings/url/index.php Solution: URL\u7f16\u7801\u8f6c\u7801\uff0c\u7f51\u4e0a\u968f\u4fbf\u627e\u4e2a\u5c0f\u5de5\u5177\uff0c Result\uff1a \u89e3\u7801\u7ed3\u679c\uff1a Yippeh! Your URL is challenge/training/encodings/url/saw_lotion.php?p=edslgapfmcpb&cid=52#password=fibre_optics Very well done! \u628a\u7ed3\u679c\u7ed9\u7684\u7f51\u5740\u548cwecall\u7684\u7f51\u5740\u62fc\u5408\u4e00\u4e0b\u5e76\u8bbf\u95ee\uff1a https://www.wechall.net/challenge/training/encodings/url/saw_lotion.php?p=edslgapfmcpb&cid=52#password=fibre_optics \uff0c\u8fc7\u4e86 Training: Crypto - Caesar I (Crypto, Training) 1.2 As on most challenge sites, there are some beginner cryptos, and often you get started with the good old caesar cipher. I welcome you to the WeChall style of these training challenges :) Enjoy! SGD PTHBJ AQNVM ENW ITLOR NUDQ SGD KZYX CNF NE BZDRZQ ZMC XNTQ TMHPTD RNKTSHNM HR ONLRMZRDECGC -- https://www.wechall.net/challenge/training/crypto/caesar/index.php Solution: \u51ef\u6492\u5bc6\u7801\uff0c\u66b4\u529b\u4e00\u70b9\u7684\u8bd5\u9519\u5c31\u884c\u4e86\uff0c\u504f\u79fb6\u4f4d\u89e3\u5bc6\u65f6\uff0c\u7ed3\u679c\u4e3a\uff1aMAX JNBVD UKHPG YHQ CNFIL HOXK MAX ETSR WHZ HY VTXLTK TGW RHNK NGBJNX LHENMBHG BL IHFLGTLXYWAW \u4f46\u662f\u53ea\u6709MAX\u5bf9\u7684\u4e0a\uff0c\u5176\u4ed6\u7684\u5355\u8bcd\u8fd8\u662f\u5bf9\u4e0d\u4e0a\uff0c\u51fa\u4e8e\u5de7\u5408\uff0c\u70b9\u4e2d\u4e86\u504f\u79fb7\u4f4d\u52a0\u5bc6\uff0c\u6b64\u65f6\u7ed3\u679c\u4e3a\uff1aTHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG OF CAESAR AND YOUR UNIQUE SOLUTION IS POMSNASEFDHD \u5f97\u5230flag\uff08\u6bcf\u6b21\u968f\u673a\u51fa\u6765\u7684\u5bc6\u6587\u4e0d\u4e00\u6837\uff0c\u4f46\u9012\u5f52\u89e3\u5bc6\u80af\u5b9a\u80fd\u505a\uff09 \u5c1d\u8bd5\u5199\u4e86python\u811a\u672c\uff1a import sys def caeser_decode(p,num): result = \"\" base = \"A\" for n in num: if n == \" \": result += n else: result += chr((ord(n)-p + ord(base))%26 + ord(base)) return result if __name__ == \"__main__\": num = input(\"\u8f93\u5165\u5bc6\u6587\uff1a\") print(\"\u7206\u7834\u4e2d\uff0c\uff0c\") for p in range(1,26): print(caeser_decode(p,num)) \u4f46\u662f\u8be5\u811a\u672c\u53ea\u9488\u5bf9\u4e86\u5927\u5199\u7684\u51ef\u6492\uff0c\u9700\u8981\u52a0\u4ee5\u4fee\u6539\uff0c\u540c\u65f6\u5728 \u627e\u5230\u4e86\u7528\u5b57\u6bcd\u8868\u7684\u65b9\u6cd5\u5b9e\u73b0\u51ef\u6492\u7206\u7834\u7684\uff0c\u503c\u5f97\u5b66\u4e60\uff0c\u53ea\u4e0d\u8fc7\u6ca1\u6709\u8df3\u8fc7\u7a7a\u683c\uff0c\u6709\u70b9\u53ef\u60dc symbols = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890 !?.' ciphertext = input(\"Please input ciphertext:\\n\") for key in range(len(symbols)): ciphers = symbols[key:] + symbols[:key] # \u5b57\u6bcd\u8868 transtab = str.maketrans(ciphers, symbols) plaintext = ciphertext.translate(transtab) print(f'Key #{key}: {plaintext}') Result\uff1a THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG OF CAESAR AND YOUR UNIQUE SOLUTION IS POMSNASEFDHD Training: WWW-Robots (HTTP, Training) 1.22 In this little training challenge, you are going to learn about the Robots_exclusion_standard. The robots.txt file is used by web crawlers to check if they are allowed to crawl and index your website or only parts of it. Sometimes these files reveal the directory structure instead protecting the content from being crawled. Enjoy! Solution: robots.txt: \u662f\u4e00\u79cd\u5b58\u653e\u4e8e\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0b\u7684ASCII\u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\uff0c\u5b83\u901a\u5e38\u544a\u8bc9\u7f51\u7edc\u641c\u7d22\u5f15\u64ce\u7684\u6f2b\u6e38\u5668\uff08\u53c8\u79f0\u7f51\u7edc\u8718\u86db\uff09\uff0c\u6b64\u7f51\u7ad9\u4e2d\u7684\u54ea\u4e9b\u5185\u5bb9\u662f\u4e0d\u5e94\u88ab\u641c\u7d22\u5f15\u64ce\u7684\u6f2b\u6e38\u5668\u83b7\u53d6\u7684\uff0c\u54ea\u4e9b\u662f\u53ef\u4ee5\u88ab\u6f2b\u6e38\u5668\u83b7\u53d6\u7684\u3002\u56e0\u4e3a\u4e00\u4e9b\u7cfb\u7edf\u4e2d\u7684URL\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684\uff0c\u6240\u4ee5robots.txt\u7684\u6587\u4ef6\u540d\u5e94\u7edf\u4e00\u4e3a\u5c0f\u5199\u3002robots.txt\u5e94\u653e\u7f6e\u4e8e\u7f51\u7ad9\u7684\u6839\u76ee\u5f55\u4e0b\u3002\u5982\u679c\u60f3\u5355\u72ec\u5b9a\u4e49\u641c\u7d22\u5f15\u64ce\u7684\u6f2b\u6e38\u5668\u8bbf\u95ee\u5b50\u76ee\u5f55\u65f6\u7684\u884c\u4e3a\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06\u81ea\u5b9a\u7684\u8bbe\u7f6e\u5408\u5e76\u5230\u6839\u76ee\u5f55\u4e0b\u7684robots.txt\uff0c\u6216\u8005\u4f7f\u7528robots\u5143\u6570\u636e\uff08Metadata\uff0c\u53c8\u79f0\u5143\u6570\u636e\uff09\u3002 \u6bd4\u5982\uff0c\u6b63\u597d\u524d\u9635\u65e5\u5b50\u88ab\u8001\u5e08\u95ee\u5230\u6211\u77e5\u7f51\u8bba\u6587\u6570\u636e\u600e\u4e48\u722c\u7684\uff0c\u77e5\u7f51\u5141\u4e0d\u5141\u8bb8\u722c\u866b \u6211\u722c\u53d6\u7684\u7f51\u7ad9https://search.cnki.com.cn/\uff0c\u4ed6\u7684robots.txt\u4e3a\uff1a user-agent:* allow:/ \u5373\u5141\u8bb8\u6240\u6709\u7684\u673a\u5668\u4eba\u722c\u53d6\u4efb\u610f\u4fe1\u606f\uff0c \u800c\u6b63\u5e38\u6211\u4eec\u8bbf\u95ee\u7684\u77e5\u7f51\u9875\u9762https://www.cnki.net/\uff0c\u6ca1\u6709robots.txt\uff0c\u641c\u7d22\u65f6\u4f1a\u8df3\u8f6c\u5230\u7f51\u5740https://kns.cnki.net/\uff0c\u4ed6\u7684robots.txt\u4e3a\uff1a User-agent: * Disallow: / \u5373\u4e0d\u5141\u8bb8\u4efb\u4f55\u673a\u5668\u4eba\u722c\u53d6\u4fe1\u606f\uff0c\u6545\u77e5\u7f51\u53ef\u80fd\u771f\u7684\u4e0d\u5141\u8bb8\u722c\u866b\uff0c\u4f46search\u7684\u90a3\u4e2a\u9875\u9762\u4f9d\u65e7\u5f00\u653e\u3002 \u56de\u5230\u672c\u9898\uff0c\u601d\u8def\u5982\u4e0b\uff1a https://www.wechall.net/robots.txt \u770b\u89c1disallow\u6863\u6848 Result: https://www.wechall.net/challenge/training/www/robots/T0PS3CR3T/ PHP-0817 1.61 I have written another include system for my dynamic webpages, but it seems to be vulnerable to LFI. Here is the code: GeSHi`ed PHP code <?php if (isset($_GET['which'])) { $which = $_GET['which']; switch ($which) { case 0: case 1: case 2: require_once $which.'.php'; break; default: echo GWF_HTML::error('PHP-0817', 'Hacker NoNoNo!', false); break; } } ?> Your mission is to include solution.php. Here is the script in action: News, Forum, Guestbook. Good Luck! -- https://www.wechall.net/challenge/php0817/index.php Solution: LFI: Local File inclusion PHP\u4ee3\u7801\u4e3a\u5224\u65adwhich\u7684case\u8bed\u53e5\uff0c\u5176\u4e2d\uff0cwhich==0/1/2/\u65f6\u4f1a\u6267\u884c$which.'.php'\uff0c\u5176\u4ed6\u503c\u65f6\uff0c\u4f1a\u62a5\u9519\u8bef\u4fe1\u606f \u521d\u6b65\u7406\u89e3\uff0c\u5c06which=solution\uff0c\u662f\u4e0d\u662f\u5c31\u80fd\u901a\u8fc7index.php\u6267\u884csolution.php\u4e86 \u7ed3\u679c\u786e\u5b9e\u662f\u6210\u529f\u4e86\uff0c\u53ef\u4e3a\u4ec0\u4e48which=solution\u65f6\u901a\u8fc7\u4e86which==0/1/2\u7684\u5224\u65ad\u5462\uff1f\uff1f\uff1f - \u5f53\u4e00\u4e2a\u975e\u6570\u5b57\u5f00\u5934\u7684\u5b57\u7b26\u4e32\u4e0e\u6570\u5b570\u8fdb\u884c==\u6bd4\u8f83\u65f6\uff0c\u7ed3\u679c\u603b\u662ftrue\uff01 Result: https://www.wechall.net/challenge/php0817/index.php?which=solution Training: PHP LFI (Exploit, PHP, Training) 2.9 Your mission is to exploit this code, which has obviously an LFI vulnerability: GeSHi`ed PHP code $filename = 'pages/'.(isset($_GET[\"file\"])?$_GET[\"file\"]:\"welcome\").'.html'; include $filename; There is a lot of important stuff in ../solution.php, so please include and execute this file for us. ... -- https://www.wechall.net/challenge/training/php/lfi/up/index.php Solution: \u8d81\u70ed\u6253\u94c1\uff0c\u770b\u89c1file\uff0c\u660e\u767d\u662f\u7528\u8def\u5f84\u8fdb\u884cLFI\u653b\u51fb\uff0c\u4f46\u662f\u4e00\u76f4\u8bbf\u95ee\u4e0d\u8fdb\u53bb \u540e\u6765\u770b\u653b\u7565\u53d1\u73b0\u62a5\u9519\u91cc\u663e\u793a\u7684\u662f PHP Warning(2): include(pages/../../solution.php.html): failed to open stream: No such file or directory in /home/wechall/www/wc5/www/challenge/training/php/lfi/up/index.php(54) : eval()'d code line 1 PHP Warning(2): include(): Failed opening 'pages/../../solution.php.html' for inclusion \u53d1\u73b0\u591a\u4e86\u4e2a.html\uff0c\u7528%00\u622a\u65ad\uff0c\u901a\u8fc7 Result: https://www.wechall.net/challenge/training/php/lfi/up/index.php?file=../../solution.php%00 Prime Factory (Training, Math) 1.98 Your task is simple: Find the first two primes above 1 million, whose separate digit sums are also prime. As example take 23, which is a prime whose digit sum, 5, is also prime. The solution is the concatination of the two numbers, Example: If the first number is 1,234,567 and the second is 8,765,432, your solution is 12345678765432 Solution: import sys def is_prime(num): for i in range(2,num): if num % i == 0 and num != 2: return False return True if __name__ == \"__main__\": print(\"start programming...\") list = [] times = 0 vars = 1000000 while times < 2: if is_prime(vars): tmp = sum(map(int, str(vars))) if is_prime(tmp): list.append(vars) times += 1 vars += 1 if vars > 9999999: break print(list) Result: 10000331000037 Training: MySQL I (MySQL, Exploit, Training) 2.16 This one is the classic mysql injection challenge. Your mission is easy: Login yourself as admin. Again you are given the sourcecode, also as highlighted version. Enjoy! -- https://www.wechall.net/challenge/training/mysql/auth_bypass1/index.php Solution: SQL\u6ce8\u5165\uff0c\u5bf9\u5e94\u6e90\u7801\uff1a function auth1_onLogin(WC_Challenge $chall, $username, $password) { $db = auth1_db(); $password = md5($password); $query = \"SELECT * FROM users WHERE username='$username' AND password='$password'\"; # Attention\uff01\uff01 if (false === ($result = $db->queryFirst($query))) { # Attention\uff01\uff01 echo GWF_HTML::error('Auth1', $chall->lang('err_unknown'), false); # Unknown user return false; } # Welcome back! echo GWF_HTML::message('Auth1', $chall->lang('msg_welcome_back', htmlspecialchars($result['username'])), false); # Challenge solved? if (strtolower($result['username']) === 'admin') { # Attention\uff01\uff01 $chall->onChallengeSolved(GWF_Session::getUserID()); } return true; } \u5373\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\uff1a 1. query\u80fd\u8fd4\u56de\u7ed3\u679c 2. \u7528\u6237\u540d\u4e3aadmin 3. \u7a81\u7834\u53e3\u5728\\$query\u7684$username\u4e0a Result: username: admin' or '1'='1 passowrd: * Training: Encodings I (Training, Encoding) 3.35 We intercepted this message from one challenger to another, maybe you can find out what they were talking about. To help you on your progress I coded a small java application, called JPK. Note: The message is most likely in english. 10101001101000110100111100110100 00011101001100101111100011101000 10000011010011110011010000001101 11010110111000101101001111010001 00000110010111011101100011110111 11100100110010111001000100000110 00011110011110001111010011101001 01011100100000101100111011111110 10111100100100000111000011000011 11001111100111110111110111111100 10110010001000001101001111001101 00000110010111000011110011111100 11110011111010011000011110010111 0100110010111100100101110 -- https://www.wechall.net/challenge/training/encodings1/index.php Solution: \u4e0b\u8f7dJDK\uff0c\u8fd0\u884c \u7531\u4e8e\u662f0/1\uff0c\u5224\u65ad\u4e3a\u662fBinary\u4e8c\u8fdb\u5236\uff0c\u5c06\u5176\u8f6c\u6362\u4e3aascii ASCII \u7801\u4f7f\u7528\u6307\u5b9a\u76847 \u4f4d\u62168 \u4f4d\u4e8c\u8fdb\u5236\u6570\u7ec4\u5408\u6765\u8868\u793a128 \u6216256 \u79cd\u53ef\u80fd\u7684\u5b57\u7b26\u3002 \u9ed8\u8ba4bitsperblock\u662f8\uff0cBinary Format\u4e4b\u540e\u591a\u4e00\u4f4d\uff0c\u6539\u62107 \u518dBinary to Ascii\u5f97\u5230\u7ed3\u679c Result\uff1a This text is 7-bit encoded ascii. Your password is easystarter Training: Programming 1 (Training, Coding) When you visit this link you receive a message. Submit the same message back to https://www.wechall.net/challenge/training/programming1/index.php?answer=the_message Your timelimit is 1.337 seconds -- https://www.wechall.net/challenge/training/programming1/index.php Solution: \u722c\u866b\uff0cfq\u9700\u8981\u628a\u5c0f\u706b\u7bad\u505c\u6389\uff01\u4fdd\u8bc1IP\u5730\u5740\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u62a5\u9519Please login by sending your cookies in the HTTP Header\uff08\u6211\u4e00\u5f00\u59cb\u8fd8\u4ee5\u4e3a\u662f\u6211\u7684\u95ee\u9898\uff0c\u627e\u4e86\u4e24\u5c0f\u65f6\u7684\u9519= = \uff09 import requests url1 = 'http://www.wechall.net/challenge/training/programming1/index.php?action=request' url2 = 'http://www.wechall.net/challenge/training/programming1/index.php?answer=' header = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36'} cookie = dict(WC='16560453-62765-MFd1Gts6fM63vVbV') re = requests.get(url1,headers=header,cookies=cookie) print(re.status_code) key = re.text print(key) url2 = url2 + key re = requests.get(url2,headers=header,cookies=cookie) print(re.text) Result: \u8fd0\u884c\u7a0b\u5e8f\u5373\u53ef Zebra (Training, Encoding, Stegano) 2.25 Help! A zebra escaped from its enclosure. But where is it now? -- https://www.wechall.net/challenge/Hirsch/Zebra/index.php Solution: \u6591\u9a6c\u4e0a\u7684\u6761\u7eb9\u662f\u6761\u5f62\u7801\uff0c\u7528\u8bfb\u53d6\u6761\u5f62\u7801\u7684\u7f51\u7ad9\u8bc6\u522b\u4e00\u4e0b\u5c31\u884c \u6761\u5f62\u7801\u8bc6\u522b\uff1ahttps://online-barcode-reader.inliteresearch.com/ Result: The answer is saFFari Training: Crypto - Transposition I (Crypto, Training) 2.42 It seems that the simple substitution ciphers are too easy for you. From my own experience I can tell that transposition ciphers are more difficult to attack. However, in this training challenge you should have not much problems to reveal the plaintext. oWdnreuf.lY uoc nar ae dht eemssga eaw yebttrew eh nht eelttre sra enic roertco drre . Ihtni koy uowlu dilekt oes eoyrup sawsro don:wp soceiahbcp.h -- https://www.wechall.net/challenge/training/crypto/transposition1/index.php Solution: \u7b2c\u4e00\u4e2a\u5355\u8bcdwonderful\uff0c\u6240\u4ee5\u662f\u4e24\u4e2a\u5b57\u7b26\u53cd\u8f6c\uff0c\u5199\u7a0b\u5e8f\u5c31\u884c import sys def reverse_code(code): return code[::-1] def decode_Fun(en, num): tmp = 0 result = '' while tmp <= len(en): reverse = en[tmp:tmp+num] result += reverse_code(reverse) tmp = tmp + num reverse = en[tmp-num:-1] result += reverse_code(reverse) print(result) return result if __name__ == \"__main__\": # encrypt_code = input() encrypt_code = 'oWdnreuf.lY uoc nar ae dht eemssga eaw yebttrew eh nht eelttre sra enic roertco drre . Ihtni koy uowlu dilekt oes eoyrup sawsro don:wp soceiahbcp.h' decode_Fun(encrypt_code, 2) Result: Wonderful. You can read the message way better when the letters are in correct order. I think you would like to see your password now: posecaibhpch. Training: Regex (Training, Regex) 4.18 submit the regular expression the matches an empty string, and only an empty string. submit a regular expression that matches only the string 'wechall' without quotes. submit an expression that matches valid filenames for certain images.Your pattern shall match all images with the name wechall.ext or wechall4.ext and a valid image extension.Valid image extensions are .jpg, .gif, .tiff, .bmp and .png. capture the filename, without extension, too -- https://www.wechall.net/challenge/training/regex/index.php Solution: \u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u83dc\u9e1f\u770b\u4e00\u4e0b\u5c31\u884c \u8fd9\u91cc\u770b\u4e00\u4e0b\u975e\u6355\u83b7\u6027\u5339\u914d\u662f\u5565\uff1a\u4f8b\u5982\uff0c\u8981\u5728\u4e00\u7bc7\u82f1\u6587\u8d44\u6599\u4e2d\u67e5\u627e\"program\"\u548c\"project\"\u4e24\u4e2a\u5355\u8bcd\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u8868\u793a\u4e3a/program|project/,\u4e5f\u53ef\u8868\u793a\u4e3a/pro(gram|ject)/\uff0c\u4f46\u662f\u7f13\u5b58\u5b50\u5339\u914d(gramject)\u6ca1\u6709\u610f\u4e49\uff0c\u5c31\u53ef\u4ee5\u7528/pro(?:gram|ject)/\u8fdb\u884c\u975e\u6355\u83b7\u6027\u5339\u914d\u8fd9\u6837\u65e2\u53ef\u4ee5\u7b80\u6d01\u5339\u914d\u53c8\u53ef\u4e0d\u7f13\u5b58\u65e0\u5b9e\u9645\u610f\u4e49\u7684\u5b57\u5339\u914d\u3002 Result: /^$/ /^wechall$/ /^wechall4?.(?:tiff|jpg|gif|bmp|png)$/ /^(wechall4?).(?:tiff|jpg|gif|bmp|png)$/ hi (Math) 2.39 Hi, imagine this situation. There is an IRC channel #wechall on irc.wechall.net. The server sends the messages to all people in the channel, also back to the sender himself. When every minute one person joins and says hi, how many \"hi\" messages were totally sent for this channel after 0xfffbadc0ded minutes ? No one ever leaves the channel, so there are 0xfffbadc0ded people at the end ;) Further explanation for 3 minutes: the channel is empty and there have been sent 0 messages 1st person joins, sends hi, the server sends hi back to 1 persons. 2nd person joins, sends hi, the server sends hi back to 2 persons. 3rd person joins, sends hi, the server sends hi back to 3 persons. Minute 1: 2 messages sent Minute 2: 3 messages sent Minute 3: 4 messages sent Adding these up means for 3 minutes are 9 messages sent. Conversion Notes: 0xfffbadc0ded is hexadecimal which converts to 17.591.026.060.781 (Thats around 20 trillion minutes).Please submit your solution in the decimal system. -- https://www.wechall.net/challenge/hi/index.php Solution: \u5927\u6570\u7b49\u5dee\u6570\u5217\uff0c\u61d2\u5f97\u7f16\u7a0b\uff0c\u7528\u514d\u8d39\u5728\u7ebf\u667a\u80fd\u8ba1\u7b97\u5f15\u64ce https://www.wolframalpha.com/ Result: 154722098935564539692256152 Stegano Attachment (Stegano, Image, Training) 2.55 Hello challenger, You got mail and a nice attachment. Your unique solution which is bound to your session is in there too. Enjoy! -- https://www.wechall.net/challenge/training/stegano/attachment/index.php Solution: \u653estegsolve\u91ccFormat\u4e00\u4e0b\uff0cascii\u51fa\u73b0\u4e86solution.txt\u5b57\u6837\uff0c\u540e\u9762\u8ddf\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u4e2a\u4eba\u7684flag Result: \u6bcf\u4e2a\u4eba\u4e0d\u4e00\u6837","title":"write-up \u3010\u7b2c\u4e00\u6279\u3011"},{"location":"%E5%AE%89%E5%85%A8/CTF%E7%9B%B8%E5%85%B32/","tags":["Notebooks/Study"],"text":"CTF\u76f8\u51732 Training: Crypto - Substitution I (Crypto, Training) 3.06 Crypto - Simple Substitution I Oh dear, I guess you have cracked the two caesar cryptos... This one is more difficult. Although a simple substitution is easily cracked... Again the characters are limited to A-Z... But I think I can come up with a 256 version again. Enjoy! -- https://www.wechall.net/challenge/training/crypto/simplesub1/index.php JG DYM KRQEUYDG ULX GLC IKH VMKX DYEA QG FVEMHX E KQ EQNVMAAMX SMVG WMRR XLHM GLCV ALRCDELH PMG EA FHLKIIEHVMMY DYEA REDDRM IYKRRMHUM WKA HLD DLL YKVX WKA ED Solution: \u7528\u4e4b\u524d\u90a3\u4e2acaser\u63a8\u6d4bJG\u5bf9\u5e94\u4e3aBY\uff0chttps://quipqiup.com/ Result: FNOACCINREEH Training: No DNS (Training, Network) 1 Hello Hacker, In this little training challenge you have to request https://make.love.not.war.com/challenge/training/net/nodns/etc/hosts.php. I hope this info is enough. - gizmore Shouts go out to the wechall admins; dloser, tehron and livinskull :) -- https://www.wechall.net/challenge/training/net/nodns/index.php Solution: \u6dfb\u52a0DNS\u6620\u5c04\u5373\u53ef \u9996\u5148\u67e5\u8be2wechall.net\u7684IP\u5730\u5740 \u5728hosts\u6587\u4ef6\u4e2d\u52a0\u201c5.44.104.158 make.love.not.war.com\u201d \u56de\u6d4f\u89c8\u5668\u8bbf\u95eehttps://make.love.not.war.com/challenge/training/net/nodns/etc/hosts.php\uff0c\u901a\u8fc7 \u4e00\u5b9a\u8981\u5173\u4ee3\u7406\uff01\uff01\uff01\uff01\uff01 Result\uff1a \u540csolution Training: Crypto - Caesar II (Crypto, Training) 2.96 I guess you are done with Caesar I, aren't you? The big problem with caesar is that it does not allow digits or other characters. I have fixed this, and now I can use any ascii character in the plaintext. The keyspace has increased from 26 to 128 too. \\o/ Enjoy! 13 3B 3B 30 20 36 3B 2E 78 20 45 3B 41 20 3F 3B 38 42 31 30 20 3B 3A 31 20 39 3B 3E 31 20 2F 34 2D 38 38 31 3A 33 31 20 35 3A 20 45 3B 41 3E 20 36 3B 41 3E 3A 31 45 7A 20 20 34 35 3F 20 3B 3A 31 20 43 2D 3F 20 32 2D 35 3E 38 45 20 31 2D 3F 45 20 40 3B 20 2F 3E 2D 2F 37 7A 20 23 2D 3F 3A 73 40 20 35 40 0B 20 7D 7E 04 20 37 31 45 3F 20 35 3F 20 2D 20 3D 41 35 40 31 20 3F 39 2D 38 38 20 37 31 45 3F 3C 2D 2F 31 78 20 3F 3B 20 35 40 20 3F 34 3B 41 38 30 3A 73 40 20 34 2D 42 31 20 40 2D 37 31 3A 20 45 3B 41 20 40 3B 3B 20 38 3B 3A 33 20 40 3B 20 30 31 2F 3E 45 3C 40 20 40 34 35 3F 20 39 31 3F 3F 2D 33 31 7A 20 23 31 38 38 20 30 3B 3A 31 78 20 45 3B 41 3E 20 3F 3B 38 41 40 35 3B 3A 20 35 3F 20 34 32 3F 3B 34 2D 2D 31 3C 2F 38 39 7A -- https://www.wechall.net/challenge/training/crypto/caesar2/index.php Solution: import sys def caeser_128_decode(num, ciphertext): result = \"\" list = ciphertext.split(\" \") for code in list: tmp = int(code,16) + num if tmp > 126: tmp = tmp%126 + 32 result += chr(tmp) print(result) if __name__ == \"__main__\": code = input(\"ciphertext: \") for i in range(1,128): caeser_128_decode(i,code) print('\\n') Result: Good'job,'you'solved'one'more'challenge'in'your'journey.'This'one'was'fairly'easy'to'crack.'Wasn't'it?'128'keys'is'a'quite'small'keyspace,'so'it'shouldn't'have'taken'you'too'long'to'decrypt'this'message.'Well'done,'your'solution'is'pdldmglcfrop. Training: Crypto - Digraphs (Crypto, Training) 4.27 This time I am using a digraph crypto scheme to encrypt one letter into two characters. With only 26 different letters I am able to encrypt up to 26*26 different characters. The big problem again is sharing the key, but the cipher is easily broken anyway. The message is in the current language, is written with correct case and punctuation. There are no line breaks. Good luck! -- https://www.wechall.net/challenge/training/crypto/digraph/index.php Solution: Result:","title":"CTF\u76f8\u51732"},{"location":"%E5%AE%89%E5%85%A8/CTF%E7%9B%B8%E5%85%B32/#ctf2","text":"Training: Crypto - Substitution I (Crypto, Training) 3.06 Crypto - Simple Substitution I Oh dear, I guess you have cracked the two caesar cryptos... This one is more difficult. Although a simple substitution is easily cracked... Again the characters are limited to A-Z... But I think I can come up with a 256 version again. Enjoy! -- https://www.wechall.net/challenge/training/crypto/simplesub1/index.php JG DYM KRQEUYDG ULX GLC IKH VMKX DYEA QG FVEMHX E KQ EQNVMAAMX SMVG WMRR XLHM GLCV ALRCDELH PMG EA FHLKIIEHVMMY DYEA REDDRM IYKRRMHUM WKA HLD DLL YKVX WKA ED Solution: \u7528\u4e4b\u524d\u90a3\u4e2acaser\u63a8\u6d4bJG\u5bf9\u5e94\u4e3aBY\uff0chttps://quipqiup.com/ Result: FNOACCINREEH Training: No DNS (Training, Network) 1 Hello Hacker, In this little training challenge you have to request https://make.love.not.war.com/challenge/training/net/nodns/etc/hosts.php. I hope this info is enough. - gizmore Shouts go out to the wechall admins; dloser, tehron and livinskull :) -- https://www.wechall.net/challenge/training/net/nodns/index.php Solution: \u6dfb\u52a0DNS\u6620\u5c04\u5373\u53ef \u9996\u5148\u67e5\u8be2wechall.net\u7684IP\u5730\u5740 \u5728hosts\u6587\u4ef6\u4e2d\u52a0\u201c5.44.104.158 make.love.not.war.com\u201d \u56de\u6d4f\u89c8\u5668\u8bbf\u95eehttps://make.love.not.war.com/challenge/training/net/nodns/etc/hosts.php\uff0c\u901a\u8fc7 \u4e00\u5b9a\u8981\u5173\u4ee3\u7406\uff01\uff01\uff01\uff01\uff01 Result\uff1a \u540csolution Training: Crypto - Caesar II (Crypto, Training) 2.96 I guess you are done with Caesar I, aren't you? The big problem with caesar is that it does not allow digits or other characters. I have fixed this, and now I can use any ascii character in the plaintext. The keyspace has increased from 26 to 128 too. \\o/ Enjoy! 13 3B 3B 30 20 36 3B 2E 78 20 45 3B 41 20 3F 3B 38 42 31 30 20 3B 3A 31 20 39 3B 3E 31 20 2F 34 2D 38 38 31 3A 33 31 20 35 3A 20 45 3B 41 3E 20 36 3B 41 3E 3A 31 45 7A 20 20 34 35 3F 20 3B 3A 31 20 43 2D 3F 20 32 2D 35 3E 38 45 20 31 2D 3F 45 20 40 3B 20 2F 3E 2D 2F 37 7A 20 23 2D 3F 3A 73 40 20 35 40 0B 20 7D 7E 04 20 37 31 45 3F 20 35 3F 20 2D 20 3D 41 35 40 31 20 3F 39 2D 38 38 20 37 31 45 3F 3C 2D 2F 31 78 20 3F 3B 20 35 40 20 3F 34 3B 41 38 30 3A 73 40 20 34 2D 42 31 20 40 2D 37 31 3A 20 45 3B 41 20 40 3B 3B 20 38 3B 3A 33 20 40 3B 20 30 31 2F 3E 45 3C 40 20 40 34 35 3F 20 39 31 3F 3F 2D 33 31 7A 20 23 31 38 38 20 30 3B 3A 31 78 20 45 3B 41 3E 20 3F 3B 38 41 40 35 3B 3A 20 35 3F 20 34 32 3F 3B 34 2D 2D 31 3C 2F 38 39 7A -- https://www.wechall.net/challenge/training/crypto/caesar2/index.php Solution: import sys def caeser_128_decode(num, ciphertext): result = \"\" list = ciphertext.split(\" \") for code in list: tmp = int(code,16) + num if tmp > 126: tmp = tmp%126 + 32 result += chr(tmp) print(result) if __name__ == \"__main__\": code = input(\"ciphertext: \") for i in range(1,128): caeser_128_decode(i,code) print('\\n') Result: Good'job,'you'solved'one'more'challenge'in'your'journey.'This'one'was'fairly'easy'to'crack.'Wasn't'it?'128'keys'is'a'quite'small'keyspace,'so'it'shouldn't'have'taken'you'too'long'to'decrypt'this'message.'Well'done,'your'solution'is'pdldmglcfrop. Training: Crypto - Digraphs (Crypto, Training) 4.27 This time I am using a digraph crypto scheme to encrypt one letter into two characters. With only 26 different letters I am able to encrypt up to 26*26 different characters. The big problem again is sharing the key, but the cipher is easily broken anyway. The message is in the current language, is written with correct case and punctuation. There are no line breaks. Good luck! -- https://www.wechall.net/challenge/training/crypto/digraph/index.php Solution: Result:","title":"CTF\u76f8\u51732"},{"location":"%E5%AE%89%E5%85%A8/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91IBM%20Technology%20%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E9%9B%B6%E4%BF%A1%E4%BB%BB/","tags":["Notebooks/Study"],"text":"\u3010\u7b14\u8bb0\u3011IBM Technology \u7f51\u7edc\u5b89\u5168\u4e0e\u96f6\u4fe1\u4efb \u4eca\u65e5\u770b\u4e86\u4e00\u4e2a\u8f6c\u8f7dIBM\u7684\u89c6\u9891\uff0chttps://www.bilibili.com/video/BV1R34y1v7tX\uff0c\u8bb2\u7f51\u7edc\u5b89\u5168\u8d8b\u52bf\u7684\uff0c\u611f\u89c9\u5f88\u6709\u5e2e\u52a9\uff0c\u6240\u4ee5\u505a\u4e86\u4e00\u4e0b\u7b14\u8bb0 \u7f51\u7edc\u5b89\u5168\u4e2d\u7684\u4e09\u4e2a\u8d8b\u52bf\uff1a\u5b9e\u65bd\u96f6\u77e5\u8bc6\u6a21\u578b\u3001\u6539\u8fdb\u5982\u4f55\u8fdb\u884c\u5a01\u80c1\u7ba1\u7406\u3001\u5982\u4f55\u652f\u6301\u7ec4\u7ec7\u73b0\u4ee3\u5316 Zero Trust \u5982\u679c\u786e\u5b9a\u654f\u611f\u6570\u636e\u5904\u4e8e\u4fdd\u62a4\uff0cor\u5b58\u50a8\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff1f right user\uff0cright access\uff0cright data\uff0cright reason \u5404\u79cd\u63a7\u5236\u63aa\u65bd\u672c\u8d28\u4e0a\u90fd\u662f\u5728\u7ba1\u7406\u4e0a\u9762\u8fd9\u4e9bconcept \u63aa\u65bd\u4ecb\u7ecd\uff1a right user\uff1a - identity governance\u8eab\u4efd\u6cbb\u7406 - who has access to what - identity analytics \u8eab\u4efd\u5206\u6790 - know \u201cwho has access to what\u201d\u662f\u5426\u6709\u610f\u4e49\uff0c\u8fd9\u7fa4\u4eba\u5e94\u8be5\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u4e1c\u897f\u5417\uff1f - privileged account management\u7279\u6743\u8d26\u6237\u7ba1\u7406\uff08insider threats\u5185\u90e8\u5a01\u80c1\uff09 - 19years after sarbanes-oxley\uff0cshort thrift right access\uff1a - access management \u8bbf\u95ee\u7ba1\u7406 - \u6b64\u4eba\u662f\u5426\u80fd\u8bbf\u95ee\u6b64\u5e94\u7528\u7a0b\u5e8f - adaptive authentication\u81ea\u9002\u5e94\u8eab\u4efd\u8ba4\u8bc1\uff08whitest hot control\uff09 - \u5728\u6df7\u5408\u4e91\u4e2d\uff0c\u6bcf\u6b21\u6709\u4eba\u60f3\u8bbf\u95ee\u654f\u611f\u4fe1\u606f\u65f6\uff0c\u90fd\u5e94\u8be5\u56f4\u7ed5\u5b83\u5236\u5b9a\u98ce\u9669\u8bc4\u5206\uff0ceg\uff1a\u4eba/\u8bbe\u5907/\u65e5\u671f\u6211\u662f\u5426\u80fd\u8bc6\u522b\uff1f\u81ea\u9002\u5e94\u8eab\u4efd\u9a8c\u8bc1\u5141\u8bb8\u8bbe\u7f6e\u6211\u4f7f\u7528\u4ec0\u4e48\u7ea7\u522b\u7684\u591a\u56e0\u7d20\u8eab\u4efd\u8ba4\u8bc1\uff0c\u6765\u5b9e\u9645\u5141\u8bb8\u67d0\u4eba\u8fdb\u5165 - \u4ece\u94f6\u884c\u4e1a\u83b7\u53d6\u6b3a\u8bc8\u68c0\u6d4b\u7b97\u6cd5\uff08the fraud detection algorithms\uff09\uff0c\u5e76\u5c06\u4ed6\u4eec\u7ed3\u5408\u5230\u8eab\u4efd\u548c\u8bbf\u95ee\u7ba1\u7406\u5806\u6808\uff08identity and management stack\uff09\uff0c\u4ee5\u5141\u8bb8\u67d0\u4eba\u6267\u884c\u8fd9\u79cd\u9ad8\u7ea7\u529f\u80fd\uff08\u8bf4\u7684\u5e94\u8be5\u662f\u81ea\u9002\u5e94\uff09 right data\uff1a - D+C\uff0cdiscovery and classification\uff0c\u53d1\u73b0\u4e0e\u5206\u7c7b - \u786e\u4fdd\u6211\u4eec\u77e5\u9053\u7684\u654f\u611f\u6570\u636e\u90fd\u5728\u672c\u5730\u6216\u4e91\u4f9b\u5e94\u5546\u4e2d\u7684\u4f4d\u7f6e\uff1b\u4e00\u65e6\u77e5\u9053\u4f4d\u7f6e\uff0c\u6211\u9700\u8981\u5c06\u5176\u9501\u5b9a\uff0c\u968f\u540e\u5c31\u8fdb\u5165\u4e86\ufe0f - encryption\uff0c\u52a0\u5bc6\uff08popular\uff09 - data and file activity monitoring\u6570\u636e\u548c\u6587\u4ef6\u6d3b\u52a8\u76d1\u63a7 - \u4f7f\u7528\u52a0\u5bc6\uff0c\u5f53\u53ef\u4ee5\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u4e5f\u53ef\u4ee5\u9650\u5236\u8bbf\u95ee - \u53ef\u4ee5\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u8bbf\u95ee\u67d0\u4e00\u7279\u5b9a\u6570\u636e\u96c6\u5408 - key management\u5bc6\u94a5\u7ba1\u7406 - \u786e\u4fdd\u53ef\u4ee5\u4fdd\u62a4\u76d6\u6570\u636e\u7684\u52a0\u5bc6\u5bc6\u94a5\u5e76\u8fdb\u884c\u5bc6\u94a5\u7ba1\u7406 right reason\uff08wants but struggle\uff09 - data risk insights - if we go to a cloud-based architecture, \u60a8\u53ef\u4ee5\u67e5\u770b\u957f\u65f6\u95f4\u4f7f\u7528\u7684\u5927\u91cf\u6570\u636e\uff0c\u5e76\u627e\u5230\u60a8\u7b2c\u4e00\u6b21\u9519\u8fc7\u7684\u4e1c\u897f - handle transactional fraud\u5904\u7406\u4ea4\u6613\u6b3a\u8bc8 - configuration and management\u914d\u7f6e\u548c\u7ba1\u7406 - \u5728\u96f6\u4fe1\u4efb\u73af\u5883\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6df7\u5408\u4e91\u73af\u5883\u4e2d\uff0c\u60a8\u6b63\u5728\u5e94\u7528\u4ece\u4e0d\u4fe1\u4efb\u3001\u59cb\u7ec8\u9a8c\u8bc1\u7684\u96f6\u4fe1\u4efb\u6a21\u578b\uff0c\u6240\u4ee5\u9700\u8981\u62c5\u5fc3\u4e09\u79cd\u914d\u7f6e\u7ba1\u7406 - \u8bbe\u5907 devices - \u7f51\u7edc network - \u4e91\u539f\u751f\u5806\u6808 configuration management of the cloud native stack - \u5728\u8fd0DevOps\u9879\u76ee\u65f6\u4f1a\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u548c\u654f\u611f\u6570\u636e\u653e\u5230\u53ef\u80fd\u7684\u591a\u4e2a\u4e91\u4e2d \u5a01\u80c1\u7ba1\u7406 \u4fe1\u4efb\u7b97\u6cd5\uff0cbig influencers\uff0c\u5982\u4f55\u5b9e\u65bd\u63a7\u5236 \u2014\u2014 \u5982\u4f55\u5b9e\u9645\u8fdb\u884c\u5a01\u80c1\u7ba1\u7406\uff08threat management\uff09 Threat Management find-\u300bconfirm-\u300bfix \u7ffb\u8bd1\uff1a \u5927\u6d77\u635e\u9488/\u5728\u9488\u5806\u4e2d\u627e\u5230\u9488-\u300b\u786e\u8ba4\u4ed6\u4eec\u662f\u5426\u8db3\u591f\u654f\u9510\u4ee5\u91c7\u53d6\u884c\u52a8-\u300b\u4fee\u590d\u6ce5\u53d1\u73b0\u7684\u4e1c\u897f find\uff1a - SIEM\u5de5\u5177/\u5b89\u5168\u4fe1\u606f\u4e8b\u4ef6\u7ba1\u7406\uff1a\u624b\u673a\u3001\u89c4\u8303\u5316\u3001\u5173\u8054\u3001\u62a5\u544a\u3001\u76d1\u63a7\u548c\u8bb0\u5f55 - \u5b9e\u65f6\u7f51\u7edc\u6d41\u91cf\u5206\u6790 - \u7528\u6237\u884c\u4e3a\u5206\u6790 confirm\uff1a - search\uff08no sense\uff09 - AI \u4eba\u5de5\u667a\u80fd fix\uff1a - null set \u7a7a\u96c6 - \u9047\u5230\u4e86\u5371\u9669\u5374\u6ca1\u6709\u6307\u5b9a\u76f8\u5e94\u7684\u5e94\u5bf9\u8ba1\u5212 - \u8de8\u7ec4\u7ec7\u534f\u4f5c\u8ba1\u5212\u4ee5\u5e94\u5bf9\u7f51\u7edc\u4e8b\u4ef6 - grow awareness \u901a\u8fc7\u7f51\u7edc\u9776\u573a\u6d3b\u52a8\uff08cyber range activities\uff09\u7b49\u65b9\u5f0f\u63d0\u9ad8\u4ee5\u5b9e\uff0c\u8fdb\u884c\u5b9e\u5f39\u6f14\u4e60 - \u5236\u5b9a\u81ea\u52a8\u5316\u4e8b\u4ef6\u54cd\u5e94\u624b\u518c\uff08the incident playbooks\uff09 modernization \u73b0\u4ee3\u5316\u6570\u5b57\u5316\u8f6c\u578b \u5373\uff0chow do you support the modernization of your organization \u5f53\u6709\u65b0\u7684\u5a01\u80c1\u548c\u4e1c\u897f\u6765\u6e90\u65f6\uff0c\u539f\u5148\u5341\u51e0\u5e74\u5404\u5927\u7ec4\u7ec7\u7684\u529e\u6cd5\u662f\uff1a\u201c\u6536\u96c6\u6240\u6709\u7684\u6570\u636e\uff0c\u7136\u540e\u653e\u5165\u4f7f\u7528\u7684\u4efb\u4f55\u6280\u672f\u4e2d\uff08\u5b89\u5168\u5206\u6790\u5e73\u53f0\uff09\u201d\uff0c\u4f46\u662f\u8be5\u65b9\u6cd5\u4e0d\u80fd\u6269\u5c55\u5230\u6df7\u5408\u4e91\uff01 \u4e3a\u4ec0\u4e48\uff1f \u56e0\u4e3a\u4f7f\u7528\u6df7\u5408\u4e91\u65f6\uff0c\u5f88\u591a\u7f51\u7edc\u6570\u636e\u5b9e\u5728\u4e00/\u591a\u4e2a\u516c\u5171\u4e91\u63d0\u4f9b\u5546\uff08public cloud providers\uff09\u4e2d\u751f\u6210\u7684\uff0c\u5982\u679c\u4f7f\u7528\u4e0a\u65b9\u6cd5\uff0c\u9700\u8981\u5411\u4e91\u63d0\u4f9b\u5546\u652f\u4ed8\u51fa\u53e3\u8d39\u7528\uff08egress fee\uff09\uff0c\u7136\u540e\u624d\u80fd\u5c06\u6570\u636e\u53d6\u51fa\u5e76\u653e\u5165\u81ea\u5df1\u7684\u5de5\u5177\u4e2d\uff0c\u751a\u81f3\u53ef\u80fd\u6839\u636e\u6240\u4f7f\u7528\u7684\u5de5\u5177\u652f\u4ed8\u8d39\u7528 \u6240\u4ee5\u8fd9\u8bc1\u660e\u4e86\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u65e0\u6cd5\u6269\u5c55\uff0cthat approach does not scale \u5bfb\u627e\u66ff\u4ee3\u65b9\u6cd5\uff0c\u7136\u540e\u610f\u8bc6\u5230\u4e86\u8fd9\u91cc\u7f3a\u5c11\u4e86\u4e00\u4e2a\u8303\u56f4\uff08a missing scope\uff09 - \u4e0e\u5176\u5f3a\u8feb\u6240\u6709\u4e1c\u897f\u90fd\u8fdb\u5165\u540c\u4e00\u4e2a\u5730\u65b9\uff0c\u5373\u4f7f\u662f\u6765\u81ea\u516c\u5171\u4e91\u63d0\u4f9b\u5546\uff0c\u4e0d\u5982\u91c7\u53d6\u8054\u5408\u65b9\u6cd5\uff08faderated approach\uff09\u6765\u8fdb\u884c\u5a01\u80c1\u8c03\u67e5\u548c\u5e94\u7528\u5a01\u80c1\u60c5\u62a5 - \u51fa\u73b0\u65b0\u6307\u6807\uff0c\u4e0d\u8981\u7b49\u6570\u636e\u4f20\u8f93\u5230\u81ea\u5df1\u7684\u5b89\u5168\u5206\u6790\u5e73\u53f0\uff0c\u800c\u662f\u8be2\u95ee\u5b89\u5168\u5206\u6790\u5e73\u53f0\uff0c\u5b89\u5168\u5de5\u5177\uff0c\u4e91\u4f9b\u5e94\u5546\u7b49\uff0c\u7136\u540e\u5f53\u573a\u505a\u51fa\u51b3\u5b9a\u3002\u8fd9\u6837\u66f4\u7b80\u5355\u3001\u5feb\u901f\u4e14\u6709\u6548\u3002 - \u672c\u6b65\u9aa4\u4e0e\u3010fix\u3011\u8054\u5408\u8d77\u6765\uff0c\u5bf9\u5a01\u80c1\u7ba1\u7406\u80fd\u529b\u4ea7\u751f\u91cd\u5927\u5f71\u54cd - \u73b0\u4ee3\u5316\u60a8\u7684\u65b9\u6cd5\uff0c\u65b9\u6cd5\u80fd\u63d0\u4f9b\u7f51\u7edc\u670d\u52a1\u7ed9\u4f60\u7684\u73b0\u4ee3\u5316\u7ec4\u7ec7\uff0c\u56e0\u4e3a\u8fd9\u4e00\u5207\u90fd\u5efa\u7acb\u5728\u4e91\u539f\u751f\u5fae\u670d\u52a1\u4e0a","title":"\u3010\u7b14\u8bb0\u3011IBM Technology \u7f51\u7edc\u5b89\u5168\u4e0e\u96f6\u4fe1\u4efb"},{"location":"%E5%AE%89%E5%85%A8/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91IBM%20Technology%20%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E9%9B%B6%E4%BF%A1%E4%BB%BB/#ibm-technology","text":"\u4eca\u65e5\u770b\u4e86\u4e00\u4e2a\u8f6c\u8f7dIBM\u7684\u89c6\u9891\uff0chttps://www.bilibili.com/video/BV1R34y1v7tX\uff0c\u8bb2\u7f51\u7edc\u5b89\u5168\u8d8b\u52bf\u7684\uff0c\u611f\u89c9\u5f88\u6709\u5e2e\u52a9\uff0c\u6240\u4ee5\u505a\u4e86\u4e00\u4e0b\u7b14\u8bb0 \u7f51\u7edc\u5b89\u5168\u4e2d\u7684\u4e09\u4e2a\u8d8b\u52bf\uff1a\u5b9e\u65bd\u96f6\u77e5\u8bc6\u6a21\u578b\u3001\u6539\u8fdb\u5982\u4f55\u8fdb\u884c\u5a01\u80c1\u7ba1\u7406\u3001\u5982\u4f55\u652f\u6301\u7ec4\u7ec7\u73b0\u4ee3\u5316","title":"\u3010\u7b14\u8bb0\u3011IBM Technology \u7f51\u7edc\u5b89\u5168\u4e0e\u96f6\u4fe1\u4efb"},{"location":"%E5%AE%89%E5%85%A8/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91IBM%20Technology%20%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E9%9B%B6%E4%BF%A1%E4%BB%BB/#zero-trust","text":"\u5982\u679c\u786e\u5b9a\u654f\u611f\u6570\u636e\u5904\u4e8e\u4fdd\u62a4\uff0cor\u5b58\u50a8\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff1f right user\uff0cright access\uff0cright data\uff0cright reason \u5404\u79cd\u63a7\u5236\u63aa\u65bd\u672c\u8d28\u4e0a\u90fd\u662f\u5728\u7ba1\u7406\u4e0a\u9762\u8fd9\u4e9bconcept \u63aa\u65bd\u4ecb\u7ecd\uff1a right user\uff1a - identity governance\u8eab\u4efd\u6cbb\u7406 - who has access to what - identity analytics \u8eab\u4efd\u5206\u6790 - know \u201cwho has access to what\u201d\u662f\u5426\u6709\u610f\u4e49\uff0c\u8fd9\u7fa4\u4eba\u5e94\u8be5\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u4e1c\u897f\u5417\uff1f - privileged account management\u7279\u6743\u8d26\u6237\u7ba1\u7406\uff08insider threats\u5185\u90e8\u5a01\u80c1\uff09 - 19years after sarbanes-oxley\uff0cshort thrift right access\uff1a - access management \u8bbf\u95ee\u7ba1\u7406 - \u6b64\u4eba\u662f\u5426\u80fd\u8bbf\u95ee\u6b64\u5e94\u7528\u7a0b\u5e8f - adaptive authentication\u81ea\u9002\u5e94\u8eab\u4efd\u8ba4\u8bc1\uff08whitest hot control\uff09 - \u5728\u6df7\u5408\u4e91\u4e2d\uff0c\u6bcf\u6b21\u6709\u4eba\u60f3\u8bbf\u95ee\u654f\u611f\u4fe1\u606f\u65f6\uff0c\u90fd\u5e94\u8be5\u56f4\u7ed5\u5b83\u5236\u5b9a\u98ce\u9669\u8bc4\u5206\uff0ceg\uff1a\u4eba/\u8bbe\u5907/\u65e5\u671f\u6211\u662f\u5426\u80fd\u8bc6\u522b\uff1f\u81ea\u9002\u5e94\u8eab\u4efd\u9a8c\u8bc1\u5141\u8bb8\u8bbe\u7f6e\u6211\u4f7f\u7528\u4ec0\u4e48\u7ea7\u522b\u7684\u591a\u56e0\u7d20\u8eab\u4efd\u8ba4\u8bc1\uff0c\u6765\u5b9e\u9645\u5141\u8bb8\u67d0\u4eba\u8fdb\u5165 - \u4ece\u94f6\u884c\u4e1a\u83b7\u53d6\u6b3a\u8bc8\u68c0\u6d4b\u7b97\u6cd5\uff08the fraud detection algorithms\uff09\uff0c\u5e76\u5c06\u4ed6\u4eec\u7ed3\u5408\u5230\u8eab\u4efd\u548c\u8bbf\u95ee\u7ba1\u7406\u5806\u6808\uff08identity and management stack\uff09\uff0c\u4ee5\u5141\u8bb8\u67d0\u4eba\u6267\u884c\u8fd9\u79cd\u9ad8\u7ea7\u529f\u80fd\uff08\u8bf4\u7684\u5e94\u8be5\u662f\u81ea\u9002\u5e94\uff09 right data\uff1a - D+C\uff0cdiscovery and classification\uff0c\u53d1\u73b0\u4e0e\u5206\u7c7b - \u786e\u4fdd\u6211\u4eec\u77e5\u9053\u7684\u654f\u611f\u6570\u636e\u90fd\u5728\u672c\u5730\u6216\u4e91\u4f9b\u5e94\u5546\u4e2d\u7684\u4f4d\u7f6e\uff1b\u4e00\u65e6\u77e5\u9053\u4f4d\u7f6e\uff0c\u6211\u9700\u8981\u5c06\u5176\u9501\u5b9a\uff0c\u968f\u540e\u5c31\u8fdb\u5165\u4e86\ufe0f - encryption\uff0c\u52a0\u5bc6\uff08popular\uff09 - data and file activity monitoring\u6570\u636e\u548c\u6587\u4ef6\u6d3b\u52a8\u76d1\u63a7 - \u4f7f\u7528\u52a0\u5bc6\uff0c\u5f53\u53ef\u4ee5\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u4e5f\u53ef\u4ee5\u9650\u5236\u8bbf\u95ee - \u53ef\u4ee5\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u8bbf\u95ee\u67d0\u4e00\u7279\u5b9a\u6570\u636e\u96c6\u5408 - key management\u5bc6\u94a5\u7ba1\u7406 - \u786e\u4fdd\u53ef\u4ee5\u4fdd\u62a4\u76d6\u6570\u636e\u7684\u52a0\u5bc6\u5bc6\u94a5\u5e76\u8fdb\u884c\u5bc6\u94a5\u7ba1\u7406 right reason\uff08wants but struggle\uff09 - data risk insights - if we go to a cloud-based architecture, \u60a8\u53ef\u4ee5\u67e5\u770b\u957f\u65f6\u95f4\u4f7f\u7528\u7684\u5927\u91cf\u6570\u636e\uff0c\u5e76\u627e\u5230\u60a8\u7b2c\u4e00\u6b21\u9519\u8fc7\u7684\u4e1c\u897f - handle transactional fraud\u5904\u7406\u4ea4\u6613\u6b3a\u8bc8 - configuration and management\u914d\u7f6e\u548c\u7ba1\u7406 - \u5728\u96f6\u4fe1\u4efb\u73af\u5883\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6df7\u5408\u4e91\u73af\u5883\u4e2d\uff0c\u60a8\u6b63\u5728\u5e94\u7528\u4ece\u4e0d\u4fe1\u4efb\u3001\u59cb\u7ec8\u9a8c\u8bc1\u7684\u96f6\u4fe1\u4efb\u6a21\u578b\uff0c\u6240\u4ee5\u9700\u8981\u62c5\u5fc3\u4e09\u79cd\u914d\u7f6e\u7ba1\u7406 - \u8bbe\u5907 devices - \u7f51\u7edc network - \u4e91\u539f\u751f\u5806\u6808 configuration management of the cloud native stack - \u5728\u8fd0DevOps\u9879\u76ee\u65f6\u4f1a\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u548c\u654f\u611f\u6570\u636e\u653e\u5230\u53ef\u80fd\u7684\u591a\u4e2a\u4e91\u4e2d","title":"Zero Trust"},{"location":"%E5%AE%89%E5%85%A8/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91IBM%20Technology%20%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E9%9B%B6%E4%BF%A1%E4%BB%BB/#_1","text":"\u4fe1\u4efb\u7b97\u6cd5\uff0cbig influencers\uff0c\u5982\u4f55\u5b9e\u65bd\u63a7\u5236 \u2014\u2014 \u5982\u4f55\u5b9e\u9645\u8fdb\u884c\u5a01\u80c1\u7ba1\u7406\uff08threat management\uff09 Threat Management find-\u300bconfirm-\u300bfix \u7ffb\u8bd1\uff1a \u5927\u6d77\u635e\u9488/\u5728\u9488\u5806\u4e2d\u627e\u5230\u9488-\u300b\u786e\u8ba4\u4ed6\u4eec\u662f\u5426\u8db3\u591f\u654f\u9510\u4ee5\u91c7\u53d6\u884c\u52a8-\u300b\u4fee\u590d\u6ce5\u53d1\u73b0\u7684\u4e1c\u897f find\uff1a - SIEM\u5de5\u5177/\u5b89\u5168\u4fe1\u606f\u4e8b\u4ef6\u7ba1\u7406\uff1a\u624b\u673a\u3001\u89c4\u8303\u5316\u3001\u5173\u8054\u3001\u62a5\u544a\u3001\u76d1\u63a7\u548c\u8bb0\u5f55 - \u5b9e\u65f6\u7f51\u7edc\u6d41\u91cf\u5206\u6790 - \u7528\u6237\u884c\u4e3a\u5206\u6790 confirm\uff1a - search\uff08no sense\uff09 - AI \u4eba\u5de5\u667a\u80fd fix\uff1a - null set \u7a7a\u96c6 - \u9047\u5230\u4e86\u5371\u9669\u5374\u6ca1\u6709\u6307\u5b9a\u76f8\u5e94\u7684\u5e94\u5bf9\u8ba1\u5212 - \u8de8\u7ec4\u7ec7\u534f\u4f5c\u8ba1\u5212\u4ee5\u5e94\u5bf9\u7f51\u7edc\u4e8b\u4ef6 - grow awareness \u901a\u8fc7\u7f51\u7edc\u9776\u573a\u6d3b\u52a8\uff08cyber range activities\uff09\u7b49\u65b9\u5f0f\u63d0\u9ad8\u4ee5\u5b9e\uff0c\u8fdb\u884c\u5b9e\u5f39\u6f14\u4e60 - \u5236\u5b9a\u81ea\u52a8\u5316\u4e8b\u4ef6\u54cd\u5e94\u624b\u518c\uff08the incident playbooks\uff09","title":"\u5a01\u80c1\u7ba1\u7406"},{"location":"%E5%AE%89%E5%85%A8/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91IBM%20Technology%20%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E9%9B%B6%E4%BF%A1%E4%BB%BB/#modernization","text":"\u5373\uff0chow do you support the modernization of your organization \u5f53\u6709\u65b0\u7684\u5a01\u80c1\u548c\u4e1c\u897f\u6765\u6e90\u65f6\uff0c\u539f\u5148\u5341\u51e0\u5e74\u5404\u5927\u7ec4\u7ec7\u7684\u529e\u6cd5\u662f\uff1a\u201c\u6536\u96c6\u6240\u6709\u7684\u6570\u636e\uff0c\u7136\u540e\u653e\u5165\u4f7f\u7528\u7684\u4efb\u4f55\u6280\u672f\u4e2d\uff08\u5b89\u5168\u5206\u6790\u5e73\u53f0\uff09\u201d\uff0c\u4f46\u662f\u8be5\u65b9\u6cd5\u4e0d\u80fd\u6269\u5c55\u5230\u6df7\u5408\u4e91\uff01 \u4e3a\u4ec0\u4e48\uff1f \u56e0\u4e3a\u4f7f\u7528\u6df7\u5408\u4e91\u65f6\uff0c\u5f88\u591a\u7f51\u7edc\u6570\u636e\u5b9e\u5728\u4e00/\u591a\u4e2a\u516c\u5171\u4e91\u63d0\u4f9b\u5546\uff08public cloud providers\uff09\u4e2d\u751f\u6210\u7684\uff0c\u5982\u679c\u4f7f\u7528\u4e0a\u65b9\u6cd5\uff0c\u9700\u8981\u5411\u4e91\u63d0\u4f9b\u5546\u652f\u4ed8\u51fa\u53e3\u8d39\u7528\uff08egress fee\uff09\uff0c\u7136\u540e\u624d\u80fd\u5c06\u6570\u636e\u53d6\u51fa\u5e76\u653e\u5165\u81ea\u5df1\u7684\u5de5\u5177\u4e2d\uff0c\u751a\u81f3\u53ef\u80fd\u6839\u636e\u6240\u4f7f\u7528\u7684\u5de5\u5177\u652f\u4ed8\u8d39\u7528 \u6240\u4ee5\u8fd9\u8bc1\u660e\u4e86\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u65e0\u6cd5\u6269\u5c55\uff0cthat approach does not scale \u5bfb\u627e\u66ff\u4ee3\u65b9\u6cd5\uff0c\u7136\u540e\u610f\u8bc6\u5230\u4e86\u8fd9\u91cc\u7f3a\u5c11\u4e86\u4e00\u4e2a\u8303\u56f4\uff08a missing scope\uff09 - \u4e0e\u5176\u5f3a\u8feb\u6240\u6709\u4e1c\u897f\u90fd\u8fdb\u5165\u540c\u4e00\u4e2a\u5730\u65b9\uff0c\u5373\u4f7f\u662f\u6765\u81ea\u516c\u5171\u4e91\u63d0\u4f9b\u5546\uff0c\u4e0d\u5982\u91c7\u53d6\u8054\u5408\u65b9\u6cd5\uff08faderated approach\uff09\u6765\u8fdb\u884c\u5a01\u80c1\u8c03\u67e5\u548c\u5e94\u7528\u5a01\u80c1\u60c5\u62a5 - \u51fa\u73b0\u65b0\u6307\u6807\uff0c\u4e0d\u8981\u7b49\u6570\u636e\u4f20\u8f93\u5230\u81ea\u5df1\u7684\u5b89\u5168\u5206\u6790\u5e73\u53f0\uff0c\u800c\u662f\u8be2\u95ee\u5b89\u5168\u5206\u6790\u5e73\u53f0\uff0c\u5b89\u5168\u5de5\u5177\uff0c\u4e91\u4f9b\u5e94\u5546\u7b49\uff0c\u7136\u540e\u5f53\u573a\u505a\u51fa\u51b3\u5b9a\u3002\u8fd9\u6837\u66f4\u7b80\u5355\u3001\u5feb\u901f\u4e14\u6709\u6548\u3002 - \u672c\u6b65\u9aa4\u4e0e\u3010fix\u3011\u8054\u5408\u8d77\u6765\uff0c\u5bf9\u5a01\u80c1\u7ba1\u7406\u80fd\u529b\u4ea7\u751f\u91cd\u5927\u5f71\u54cd - \u73b0\u4ee3\u5316\u60a8\u7684\u65b9\u6cd5\uff0c\u65b9\u6cd5\u80fd\u63d0\u4f9b\u7f51\u7edc\u670d\u52a1\u7ed9\u4f60\u7684\u73b0\u4ee3\u5316\u7ec4\u7ec7\uff0c\u56e0\u4e3a\u8fd9\u4e00\u5207\u90fd\u5efa\u7acb\u5728\u4e91\u539f\u751f\u5fae\u670d\u52a1\u4e0a","title":"modernization \u73b0\u4ee3\u5316\u6570\u5b57\u5316\u8f6c\u578b"}]}